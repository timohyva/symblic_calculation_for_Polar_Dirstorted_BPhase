(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    355476,       7120]
NotebookOptionsPosition[    352624,       7034]
NotebookOutlinePosition[    352989,       7050]
CellTagsIndexPosition[    352946,       7047]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "c1", ",", "c2", ",", "R", ",", "S", ",", "k", ",", "kp", ",", "f1", ",", 
    "f2", ",", "f3", ",", "f4", ",", "a", ",", "C10", ",", "C1a", ",", "C20", 
    ",", "C2a"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   RowBox[{"c1", "+", "c2", "-", 
    RowBox[{"(", 
     RowBox[{"1", "+", "R"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   RowBox[{"c1", "-", "c2", "-", 
    RowBox[{
     FractionBox["k", "kp"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "R"}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f3", "=", 
   RowBox[{
    RowBox[{"c1", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "kp", " ", "a"}], "]"}]}], "+", 
    RowBox[{"c2", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "kp", " ", "a"}], "]"}]}], "-", 
    RowBox[{"S", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "k", " ", "a"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f4", "=", 
   RowBox[{
    RowBox[{"c1", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "kp", " ", "a"}], "]"}], " ", "kp"}], "-", 
    RowBox[{"c2", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "I"}], " ", "kp", " ", "a"}], "]"}], " ", "kp"}], "-", 
    RowBox[{"S", " ", 
     RowBox[{"Exp", "[", 
      RowBox[{"I", " ", "k", " ", "a"}], "]"}], " ", "k"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"C10", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f1", "+", "f2"}], "\[Equal]", "0"}], ",", "c1"}], "]"}], ",", 
    "R"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"C20", "=", 
  RowBox[{"Collect", "[", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"f1", "-", "f2"}], "\[Equal]", "0"}], ",", "c2"}], "]"}], ",", 
    "R"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"C1a", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"f3", "+", "f4"}], "\[Equal]", "0"}], ",", "c1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"C2a", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"f3", "-", "f4"}], ")"}], "/.", "%"}], ")"}], "\[Equal]", 
     "0"}], ",", "c2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{"\"\<c1 is:\>\"", ",", "Red", ",", "18"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Level", "[", 
      RowBox[{"C1a", ",", "3"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/.", 
    RowBox[{
     RowBox[{"Level", "[", 
      RowBox[{"C2a", ",", "2"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"S", ",", "k", ",", "kp", ",", "a"}], "}"}], "\[Element]", 
       "Reals"}], "&&", 
      RowBox[{"k", ">", "0"}], "&&", " ", 
      RowBox[{"kp", ">", "0"}], "&&", 
      RowBox[{"kp", ">", "k"}], "&&", 
      RowBox[{"S", ">", "0"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{"\"\<S,R is:\>\"", ",", "Red", ",", "18"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"k", "+", "kp"}], 
          RowBox[{"2", " ", "kp"}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "k"}], "+", "kp"}], ")"}], " ", "R"}], 
          RowBox[{"2", " ", "kp"}]]}], "==", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", 
            RowBox[{"(", 
             RowBox[{"k", "-", "kp"}], ")"}]}]], " ", 
          RowBox[{"(", 
           RowBox[{"k", "+", "kp"}], ")"}], " ", "S"}], 
         RowBox[{"2", " ", "kp"}]]}], ",", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "k"}], "+", "kp"}], 
          RowBox[{"2", " ", "kp"}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "kp"}], ")"}], " ", "R"}], 
          RowBox[{"2", " ", "kp"}]]}], "==", 
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "+", 
             RowBox[{"\[ImaginaryI]", " ", "a", " ", "kp"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"k", "-", "kp"}], ")"}], " ", "S"}], 
          RowBox[{"2", " ", "kp"}]]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"S", ",", "R"}], "}"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"R", ",", "S", ",", "k", ",", "kp", ",", "a"}], "}"}], 
       "\[Element]", "Reals"}], "&&", 
      RowBox[{"k", ">", "0"}], "&&", " ", 
      RowBox[{"kp", ">", "0"}], "&&", 
      RowBox[{"kp", ">", "k"}], "&&", 
      RowBox[{"S", ">", "0"}], "&&", 
      RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"Style", "[", 
   RowBox[{
   "\"\<|S\!\(\*SuperscriptBox[\(|\), \(2\)]\),|R\!\(\*SuperscriptBox[\(|\), \
\(2\)]\) are:\>\"", ",", "Red", ",", "18"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "\[ImaginaryI]", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k"}]], " ", "k", 
         " ", "kp"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "k", " ", "kp", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", 
            SuperscriptBox["kp", "2"]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}]}], ")"}]}], ")"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k"}]], " ", "k", 
          " ", "kp"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[ImaginaryI]", " ", "k", " ", "kp", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"a", " ", "kp"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["k", "2"], "+", 
             SuperscriptBox["kp", "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"a", " ", "kp"}], "]"}]}]}], ")"}]}], ")"}], 
      "\[Conjugate]"}]}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"R", ",", "S", ",", "k", ",", "kp", ",", "a"}], "}"}], 
        "\[Element]", "Reals"}], "&&", 
       RowBox[{"k", ">", "0"}], "&&", " ", 
       RowBox[{"kp", ">", "0"}], "&&", 
       RowBox[{"kp", ">", "k"}], "&&", 
       RowBox[{"S", ">", "0"}], "&&", 
       RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "-", "kp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"k", "+", "kp"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", " ", "kp"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "k", " ", "kp", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", 
            SuperscriptBox["kp", "2"]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}]}], ")"}]}], ")"}], " ", 
     RowBox[{"Conjugate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "-", "kp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"k", "+", "kp"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"a", " ", "kp"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "k", " ", "kp", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", 
            SuperscriptBox["kp", "2"]}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}]}], ")"}]}], "]"}]}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"R", ",", "S", ",", "k", ",", "kp", ",", "a"}], "}"}], 
        "\[Element]", "Reals"}], "&&", 
       RowBox[{"k", ">", "0"}], "&&", " ", 
       RowBox[{"kp", ">", "0"}], "&&", 
       RowBox[{"kp", ">", "k"}], "&&", 
       RowBox[{"S", ">", "0"}], "&&", 
       RowBox[{"R", ">", "0"}]}], "}"}]}]}], "]"}], "//", 
  "TraditionalForm"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.745409056709149*^9, 3.745409223067017*^9}, {
  3.7454092555801897`*^9, 3.745409319899046*^9}, {3.745409416214571*^9, 
  3.7454094749890823`*^9}, {3.745409531455038*^9, 3.7454096277035646`*^9}, {
  3.745409660278273*^9, 3.745409743384616*^9}, {3.745409861252668*^9, 
  3.745410021829123*^9}, {3.7454104497011623`*^9, 3.7454105795089893`*^9}, {
  3.745410669272296*^9, 3.745411186969247*^9}, {3.745411271268921*^9, 
  3.745411461657448*^9}, {3.745411613729537*^9, 3.745411749865065*^9}, {
  3.7454117957254047`*^9, 3.7454119031560307`*^9}, {3.7454119670563393`*^9, 
  3.745411999436852*^9}, {3.745412143388378*^9, 3.745412205070022*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c1", "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{"k", "+", "kp"}], 
      RowBox[{"2", " ", "kp"}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "k"}], "+", "kp"}], ")"}], " ", "R"}], 
      RowBox[{"2", " ", "kp"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.745412165227188*^9, 3.7454122066670637`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c2", "\[Rule]", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", "k"}], "+", "kp"}], 
      RowBox[{"2", " ", "kp"}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "+", "kp"}], ")"}], " ", "R"}], 
      RowBox[{"2", " ", "kp"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.745412165227188*^9, 3.745412206671207*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c1", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "kp"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "c2"}], "+", 
        RowBox[{"c2", " ", "kp"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "kp"}]}]], " ", "S"}], "+", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "+", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "kp"}]}]], " ", "k", " ", 
         "S"}]}], ")"}]}], 
     RowBox[{"1", "+", "kp"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.745412165227188*^9, 3.745412206675519*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"c2", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", "a", " ", "kp"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{"k", "-", "kp"}], ")"}], " ", "S"}], 
      RowBox[{"2", " ", "kp"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.745412165227188*^9, 3.745412206679873*^9}],

Cell[BoxData[
 StyleBox["\<\"c1 is:\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.745412165239502*^9, 3.7454122066840477`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"\[ImaginaryI]", " ", "a", " ", 
     RowBox[{"(", 
      RowBox[{"k", "-", "kp"}], ")"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{"k", "+", "kp"}], ")"}], " ", "S"}], 
  RowBox[{"2", " ", "kp"}]]], "Output",
 CellChangeTimes->{3.745412165227188*^9, 3.74541220673728*^9}],

Cell[BoxData[
 StyleBox["\<\"S,R is:\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.745412165239502*^9, 3.7454122067413692`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"S", "\[Rule]", 
     FractionBox[
      RowBox[{"2", " ", "\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", "k"}]], " ", "k", " ",
        "kp"}], 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k", " ", "kp", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", " ", "kp"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k", "2"], "+", 
          SuperscriptBox["kp", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "kp"}], "]"}]}]}]]}], ",", 
    RowBox[{"R", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"k", "-", "kp"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"k", "+", "kp"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"a", " ", "kp"}], "]"}]}], 
      RowBox[{
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "k", " ", "kp", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", " ", "kp"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["k", "2"], "+", 
          SuperscriptBox["kp", "2"]}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "kp"}], "]"}]}]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.745412165227188*^9, 3.745412207308435*^9}],

Cell[BoxData[
 StyleBox["\<\"|S\\!\\(\\*SuperscriptBox[\\(|\\), \
\\(2\\)]\\),|R\\!\\(\\*SuperscriptBox[\\(|\\), \\(2\\)]\\) are:\"\>",
  StripOnInput->False,
  LineColor->RGBColor[1, 0, 0],
  FrontFaceColor->RGBColor[1, 0, 0],
  BackFaceColor->RGBColor[1, 0, 0],
  GraphicsColor->RGBColor[1, 0, 0],
  FontSize->18,
  FontColor->RGBColor[1, 0, 0]]], "Print",
 CellChangeTimes->{3.745412165239502*^9, 3.745412207312118*^9}],

Cell[BoxData[
 FormBox[
  FractionBox["1", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["k", "2"], "+", 
         SuperscriptBox["kp", "2"]}], ")"}], "2"], " ", 
      RowBox[{
       SuperscriptBox["sin", "2"], "(", 
       RowBox[{"a", " ", "kp"}], ")"}]}], 
     RowBox[{"4", " ", 
      SuperscriptBox["k", "2"], " ", 
      SuperscriptBox["kp", "2"]}]], "+", 
    RowBox[{
     SuperscriptBox["cos", "2"], "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.745412165227188*^9, 3.745412207671118*^9}],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "2"], "-", 
       SuperscriptBox["kp", "2"]}], ")"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["sin", "2"], "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}], 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["k", "2"], "+", 
        SuperscriptBox["kp", "2"]}], ")"}], "2"], " ", 
     RowBox[{
      SuperscriptBox["sin", "2"], "(", 
      RowBox[{"a", " ", "kp"}], ")"}]}], "+", 
    RowBox[{"4", " ", 
     SuperscriptBox["k", "2"], " ", 
     SuperscriptBox["kp", "2"], " ", 
     RowBox[{
      SuperscriptBox["cos", "2"], "(", 
      RowBox[{"a", " ", "kp"}], ")"}]}]}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.745412165227188*^9, 3.745412207852482*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "c1", ",", "c2", ",", "R", ",", "S", ",", "k", ",", "kp", ",", "f1", ",", 
     "f2", ",", "f3", ",", "f4", ",", "a", ",", "C10", ",", "C1a", ",", "C20",
      ",", "C2a"}], "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.745410407414515*^9, 3.7454104177880096`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "c1", ",", "c2", ",", "R", ",", "S", ",", "k", ",", "kp", ",", "f1", ",", 
    "f2", ",", "f3", ",", "f4", ",", "a", ",", "C10", ",", "C1a", ",", "C20", 
    ",", "C2a"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"k", "+", "kp"}], 
          RowBox[{"2", " ", "kp"}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "k"}], "+", "kp"}], ")"}], " ", "R"}], 
          RowBox[{"2", " ", "kp"}]]}], "==", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", "\[ImaginaryI]", " ", "a", " ", "kp"}]], 
          " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "c2"}], "+", 
            RowBox[{"c2", " ", "kp"}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "a", " ", "kp"}]}]], " ", "S"}], 
            "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}], "+", 
               RowBox[{"\[ImaginaryI]", " ", "a", " ", "kp"}]}]], " ", "k", 
             " ", "S"}]}], ")"}]}], 
         RowBox[{"1", "+", "kp"}]]}], ",", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"-", "k"}], "+", "kp"}], 
          RowBox[{"2", " ", "kp"}]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"k", "+", "kp"}], ")"}], " ", "R"}], 
          RowBox[{"2", " ", "kp"}]]}], "==", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"\[ImaginaryI]", " ", "a", " ", "kp"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "c1"}], " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "kp"}]]}], "+", 
            RowBox[{"c1", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "kp"}]], " ", "kp"}], 
            "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}]], " ", "S"}], "-", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"\[ImaginaryI]", " ", "a", " ", "k"}]], " ", "k", " ", 
             "S"}]}], ")"}]}], 
         RowBox[{"1", "+", "kp"}]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"R", ",", "S"}], "}"}]}], "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"k", ",", "kp", ",", "a"}], "}"}], "\[Element]", "Reals"}], "&&", 
      RowBox[{"k", ">", "0"}], "&&", " ", 
      RowBox[{"kp", ">", "0"}], "&&", 
      RowBox[{"kp", ">", "k"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.745410091833808*^9, 3.7454102232305183`*^9}, {
  3.7454102609818068`*^9, 3.7454103002313557`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"R", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "kp"}]]}], 
          ")"}]}], " ", 
        SuperscriptBox["k", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "kp"}], ")"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "kp"}]], " ", "kp",
         " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "kp"}], ")"}]}], "+", "kp"}], ")"}]}], 
       "-", 
       RowBox[{"kp", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "kp"}], ")"}]}], "+", "kp"}], ")"}]}], 
       "+", 
       RowBox[{"k", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "kp"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "-", "kp", "+", 
          RowBox[{"2", " ", "c2", " ", "kp"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "kp"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "-", "kp", "+", 
             RowBox[{"2", " ", "c1", " ", "kp"}]}], ")"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "kp"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "kp"}]], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "k"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "k"}], "+", "kp"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "k"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"k", "+", "kp"}], ")"}]}]}], ")"}]}]]}], ",", 
    RowBox[{"S", "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "\[ImaginaryI]"}], " ", "a", " ", 
         RowBox[{"(", 
          RowBox[{"k", "+", 
           RowBox[{"2", " ", "kp"}]}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"c1", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"4", " ", "\[ImaginaryI]", " ", "a", " ", "kp"}]], " ", 
          RowBox[{"(", 
           RowBox[{"k", "-", "kp"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "kp"}], ")"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"2", " ", "\[ImaginaryI]", " ", "a", " ", "kp"}]], " ", 
          "k", " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "kp"}], ")"}]}], "+", 
         RowBox[{"c2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "kp"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"k", "+", "kp"}], ")"}]}]}], ")"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "k"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "kp"}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["k", "2"], "+", "kp"}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}]}], ")"}]}]]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.745410178547435*^9, 3.745410305376017*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "c1", ",", "c2", ",", "R", ",", "S", ",", "k", ",", "kp", ",", "f1", ",", 
    "f2", ",", "f3", ",", "f4", ",", "a", ",", "V0", ",", "e"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0", "=", "10"}], ";", 
  RowBox[{"a", "=", "2.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SqrtBox[
       RowBox[{"V0", "+", "e"}]], " ", 
      RowBox[{"Tan", "[", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{"V0", "+", "e"}]], " ", "a"}], "2"], "]"}]}], ",", 
     SqrtBox[
      RowBox[{"-", "e"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "8"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"e1", "=", 
  RowBox[{
   RowBox[{"-", "V0"}], "+", 
   FractionBox[
    RowBox[{" ", 
     SuperscriptBox["\[Pi]", "2"]}], 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "2"]}]]}]}]}], "Input",
 CellChangeTimes->{{3.74547446125161*^9, 3.745474602157505*^9}, {
  3.7454747507849627`*^9, 3.745474795408325*^9}, {3.745475090101856*^9, 
  3.745475123173143*^9}, {3.745475168528068*^9, 3.745475372203273*^9}, {
  3.745475491031764*^9, 3.745475541543695*^9}, {3.745475628216359*^9, 
  3.7454756436862593`*^9}, {3.7454757002879887`*^9, 3.7454757017846518`*^9}, {
  3.745475738774373*^9, 3.745475739513771*^9}, {3.745476181865829*^9, 
  3.7454762873989162`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBYQOe/CFib1JlAgAAADUAAAACAAAA82Oh/v//I8CIfQDVwOllPqZ2gpiv
/yPAcsGb0ewaRD9YiWMyX/8jwGdrDobOG1Q/vK4lZr7+I8DdI+QR1B1kP4b5
qc18/SPAj1OenwEidD8aj7Kc+fojwILzyY1zKoQ/QLrDOvP1I8BFKjtdeTuU
P4wQ5nbm6yPAGEkBevFdpD/YbL0eHNYjwGJ2sCUfibU/X5pxccPBI8DkVEag
yDjAP/ONlPDQrSPAbMN9m4O4xT87MUqfLZgjwEk+zYBn3cs/vaXc+PuDI8Cg
rfBJVuPQP/PJAYIZbiPA2PbxIG4x1D82tJU3nVgjwPSQviUIjNc/s28GmJJE
I8AZPs6eVsfaP+TaCSjXLiPAy6Y0DvVm3j9PF+pijRojwOuRyFSn8+A/yBk5
yqkGI8BtXr4mG7riP/TLGmEV8SLA50aCCCO55D9bT9mi8twiwMAvT6Hgp+Y/
dYIqFB/HIsAbPyWE+tToP5176rGxsSLA2+3Fm2MO6z//RYf6tZ0iwCdgFb/m
Nu0/FMC2cgmIIsATNP7dPqfvP2QLw5XOcyLAMy27DJwD8T9nBmLo4l0iwL14
3CLIW/I/eMdvZ11IIsCKuRw9y73zP8NZWpFJNCLAyisezpIX9T/Cm9fqhB4i
wKg+bHjDoPY/+64x7zEKIsCVPczQciL4P0GI+h9F9iHAftrPA22v+T87EVaA
p+AhwBVhPTgFdfs/b2uOi3vMIcCWhTjHuzP9P1d1WcaetiHANbojqc8z/z9M
RZMtKKEhwEsc1NrCpABAfOapPyONIcBZpKXj3qwBQF83U4FtdyHAZ8lWjpPd
AkB9WdltKWMhwHE9jmr6DARAqEHOhktPIcDbIJRvFkoFQIfZVc+8OSHAUpiB
8q66BkCgQrrCnyUhwAClgjM8LAhAbFux5dEPIcBFv0X4SNwJQHNFhbN1+yDA
3IVwR/2QC0CH9cetf+cgwJq0mhFvYA1AT1Wd19jRIMDxbEuOGIQPQFGGT6yj
vSDA8UEfSMPZEEAHZ5SwvacgwPW+PAVSJxJAyg1I4T2SIMC00MHNrZITQMeF
2LwvfiDAY3Vq4z0LFUB4rfvHcGggwIo/SCgf1BZAY6b7fSNUIMDHoyo5CLUY
QAIAxhW+RiDAi6ui16gbGkC696Hy
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVzXs41XccB3CU34VsWuIk8bvEY7YulHrM5HOssy70WKkhGTmiRVHt6EJl
R5STUzFJ5VZE2nFK0paH+sTq5J6tQsNTjVq0CV3mEvv2x/t5P68/3s+bD4la
s8lAT09vFcmHHpKfHZ+YEDE7a8zFz4uFwhhl5iXiHxqVwbbEfslypyDiBN25
pEFPFiq1tmE3xkW8aHK5JYU4abi4Me69iD/nTITcWsmC5bErWcMjIqb+Er3D
YQULUFHzxdAbEQ2fJC8dk7GQYvos5lmfiIvyTctz3Floi6yytnooonGi9GW9
IwtBp7dvr7klYsyCyNqO2SwMqdNf3SsR0SM2jLeXsODquDJ3TqaIp3uCDvgZ
sVB1vuO/0QQRd4LZv1vfMzBUq6+csY34r5LhsH4GFl09sTjbT8Rqjxktp54w
UBZFZaYtFdFZeXdB2X0Guh+x9q1zRZxF2Ydq7zDgbdEborYU0eutc9fx6wzc
neFSV0yJOKnhfp5Ww8DresuN0wcEjIaKUE0OAwHe7ecGOwR816H7Jy2VAYXS
wcxGJ+BXneox3wQGsmN7S0tLBXzk9uK0r4KBCdmhkfJsAZ+3Famkmxkww2s7
2MMCTnG9I2HWMxBqXHOiaaeAt+MO3LzuxUA4FfL300AB1X21e75ewsBuXVR4
4HIB31Tn2n80n4Ea//WpKxYK2OzpoqoWGKg+09p70FpAmKAmf2PGwKjWsd/R
SEDP/NLxOooB6eERG9lbHp9m6quUwzS4Tv02vugxj+bHMhZO7aMhKuLokdgG
HvnA7tGjnTT4Kvzv5FzjcVWrpcfTJhq8ZD/NsT/L4xofhed2pCHuWbG7qOYx
9DeGG7hCQ9Binx+37uJx4/jjgKUFNOzzb9/6qZzHG2aia3IGDRekTUme3uRf
fU9tnEzDofZ1zZUuPN6MWecUtJeGPI+K6lxbHt+HvHIojKQhMqC0p+VjHj/v
i6iqDKRhpyyxTDHKYU9IZ4LOm+zf6EoOPOcwfKPVQlMPGrzXZbe2tXAIpzJX
2y2gYXWStya/isO6zia5ky0NdHj65aoiDs0ieImROQ11JsufuKVxaNix5541
TYMusa1y3n4OfS3m+nw2TMHuklFd9GYOl0wysdfvpUBeOLpPXMuhqr3+SvOf
FGzYtCX4S+BQahAr6WykgLkfsaPAgUOLpIEfS29Q0D9t5bz95hwGv3baG3+Z
AtOwtEWzidmxelpKPP/XR2510zkcSC9L1yeO3hDhZU7sKt+mUV6iYLAg5Xvt
NA5bmlL/OKil4K1zc36XKYfltSq9ZA0F475rJe7GHDrFWj04foEC64tZNj1G
HM4NjvNaTew+1m13hLh8pkPNVOL4PIVzK8vh6/Ft2rQiCgxeZKyJYsj+9+y4
9EIKqL3tKbmGHEaqVO9OFlBg18Cny4jLJLflfsTLrLec6ZvModZmVbOE+HD1
SPFiYmm8rOBUPgVGxla6ZgMOPZ4/lJ05R4FDYGiTgvhkRpwmgNjzkubBzA8+
FvWJFXGKj1t3uD6HU5a5dWSdpUBzPrHPhLhi2AICiRveNQ6W6XGY1OWeP4v4
5QrzEX/ilP6rhl15FJhkfaevR/zCbld4DvH/phUorg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-10., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-10, -8}, {0., 6.527011269858927}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         SqrtBox[
          RowBox[{"V0", "+", "e"}]], " ", 
         RowBox[{"tan", "(", 
           RowBox[{
             FractionBox["1", "2"], " ", 
             SqrtBox[
              RowBox[{"V0", "+", "e"}]], " ", "a"}], ")"}]}], 
       SqrtBox[
        RowBox[{"-", "e"}]]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.74547454068974*^9, 3.745474563403551*^9}, 
   3.7454746115883207`*^9, {3.745474784563211*^9, 3.745474796392679*^9}, 
   3.745475128599394*^9, {3.745475199583201*^9, 3.7454752824719467`*^9}, {
   3.7454753131646643`*^9, 3.745475373224*^9}, 3.745475542895815*^9, {
   3.745475629639798*^9, 3.7454756447827272`*^9}, 3.74547570243288*^9, 
   3.74547574011598*^9, {3.74547618421257*^9, 3.7454762880579042`*^9}}],

Cell[BoxData[
 RowBox[{"-", "8.76629944986383`"}]], "Output",
 CellChangeTimes->{{3.74547454068974*^9, 3.745474563403551*^9}, 
   3.7454746115883207`*^9, {3.745474784563211*^9, 3.745474796392679*^9}, 
   3.745475128599394*^9, {3.745475199583201*^9, 3.7454752824719467`*^9}, {
   3.7454753131646643`*^9, 3.745475373224*^9}, 3.745475542895815*^9, {
   3.745475629639798*^9, 3.7454756447827272`*^9}, 3.74547570243288*^9, 
   3.74547574011598*^9, {3.74547618421257*^9, 3.745476288077023*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "c1", ",", "c2", ",", "R", ",", "S", ",", "k", ",", "kp", ",", "f1", ",", 
    "f2", ",", "f3", ",", "f4", ",", "a", ",", "V0", ",", "e", ",", "V0", ",",
     "a"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0", "=", "10"}], ";", 
  RowBox[{"a", "=", "2.0"}], ";", 
  RowBox[{"kp", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"k", "=", " ", 
  RowBox[{
   FractionBox[
    RowBox[{"-", "1"}], "I"], " ", "kp", " ", 
   RowBox[{"Tan", "[", 
    RowBox[{
     FractionBox["kp", "2"], " ", "a"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cos", "[", 
   RowBox[{"kp", " ", "a"}], "]"}], "-", 
  RowBox[{
   FractionBox["I", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["kp", "k"], "+", 
     FractionBox["k", "kp"]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"kp", " ", "a"}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.7454822922310877`*^9, 3.7454822972463913`*^9}, {
   3.745482344471657*^9, 3.7454824050636053`*^9}, {3.745482555893607*^9, 
   3.745482597804367*^9}, 3.74548290944201*^9, {3.745482958728568*^9, 
   3.745482959986487*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"1.5574077246549023`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7454824087141733`*^9, 3.74548260097393*^9, 
  3.745482912103078*^9, 3.745482961187607*^9}],

Cell[BoxData[
 RowBox[{"5.551115123125783`*^-17", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.7454824087141733`*^9, 3.74548260097393*^9, 
  3.745482912103078*^9, 3.7454829611895447`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "ylna", ",", "ylpa", ",", "y", ",", "A", ",", "B", ",", "C1", ",", "C3", 
    ",", "L", ",", "x", ",", "k", ",", "kp", ",", "a", ",", "eq1", ",", "eq2",
     ",", "eq3", ",", "eq4"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ylna", "=", 
   RowBox[{"C1", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "L"}], "-", "x"}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ylpa", "=", 
    RowBox[{"C3", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"k", "  ", 
       RowBox[{"(", 
        RowBox[{"L", "-", "x"}], ")"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"y", "=", 
     RowBox[{
      RowBox[{"A", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"kp", " ", "x"}], "]"}]}], "+", 
      RowBox[{"B", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"kp", " ", "x"}], "]"}]}]}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "=", 
    RowBox[{"A", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"kp", " ", "x"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"ylna", "/.", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", "a"}]}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{"y", "/.", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", "a"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq1", "//", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"ylna", ",", "x"}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", "a"}]}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"y", ",", "x"}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", "a"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "//", "TraditionalForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"ylpa", "/.", 
      RowBox[{"x", "\[Rule]", "a"}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{"y", "/.", 
      RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3", "//", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"ylpa", ",", "x"}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "a"}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"y", ",", "x"}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4", "//", "TraditionalForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"eq3", "\[Equal]", "0"}], ",", 
     RowBox[{"eq4", "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "C3"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eq1", "+", "eq3"}], "\[Equal]", "0"}], ",", "A"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eq1", "-", "eq3"}], "\[Equal]", "0"}], ",", "C1"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eq2", "+", "eq4"}], "\[Equal]", "0"}], ",", "C1"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eq2", "-", "eq4"}], "\[Equal]", "0"}], ",", "A"}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"Sec", "[", 
           RowBox[{"a", " ", "kp"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"C1", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"k", " ", 
               RowBox[{"(", 
                RowBox[{"a", "-", "L"}], ")"}]}], "]"}]}], "+", 
            RowBox[{"C3", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"k", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "a"}], "+", "L"}], ")"}]}], "]"}]}]}], ")"}]}], 
         ")"}], "/.", 
        RowBox[{"C1", "\[Rule]", 
         RowBox[{"C3", " ", 
          RowBox[{"Csc", "[", 
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", "L"}], ")"}]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "L"}], ")"}]}], "]"}]}]}]}], ")"}], 
      "\[Equal]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"C1", " ", "k", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{"a", "-", "L"}], ")"}]}], "]"}]}], "-", 
              RowBox[{"C3", " ", "k", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"k", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "a"}], "+", "L"}], ")"}]}], "]"}]}]}], ")"}], 
            " ", 
            RowBox[{"Csc", "[", 
             RowBox[{"a", " ", "kp"}], "]"}]}], 
           RowBox[{"2", " ", "kp"}]]}], ")"}], "/.", 
        RowBox[{"C1", "\[Rule]", 
         RowBox[{"C3", " ", 
          RowBox[{"Csc", "[", 
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{"a", "-", "L"}], ")"}]}], "]"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"k", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "L"}], ")"}]}], "]"}]}]}]}], ")"}]}], 
     ",", "C3"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Reduce", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", "2"]}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"C1", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"a", " ", "k"}], "]"}]}], "-", 
              RowBox[{"C3", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}], " ", 
            RowBox[{"Csc", "[", 
             RowBox[{"a", " ", "kp"}], "]"}]}], ")"}], "/.", 
          RowBox[{"C1", "\[Rule]", 
           RowBox[{"-", "C3"}]}]}], ")"}], "\[Equal]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           FractionBox[
            RowBox[{
             RowBox[{"Sec", "[", 
              RowBox[{"a", " ", "kp"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"C1", " ", "k", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"a", " ", "k"}], "]"}]}], "-", 
               RowBox[{"C3", " ", "k", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}]}], 
            RowBox[{"2", " ", "kp"}]], ")"}], "/.", 
          RowBox[{"C1", "\[Rule]", 
           RowBox[{"-", "C3"}]}]}], ")"}]}], "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<does it have zeros?\>\"", ",", "Red", ",", "18"}], "]"}],
        "]"}], "\[IndentingNewLine]", 
      RowBox[{"a", "=", "1"}]}], ";", 
     RowBox[{"V0", "=", "2"}], ";", 
     RowBox[{"k", "=", 
      SqrtBox["\[Lambda]"]}], ";", 
     RowBox[{"kp", "=", 
      SqrtBox[
       RowBox[{"kp", "+", "V0"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Plot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "k"}], "]"}], " ", 
          RowBox[{"Csc", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}], "+", 
         FractionBox[
          RowBox[{" ", 
           RowBox[{"k", " ", 
            RowBox[{"Sec", "[", 
             RowBox[{"a", " ", "kp"}], "]"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"a", " ", "k"}], "]"}]}]}], "kp"]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "0", ",", "10"}], "}"}]}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Clear", "[", 
       RowBox[{"a", ",", "V0", ",", "\[Lambda]", ",", "kp", ",", "k"}], 
       "]"}]}], ";"}], "*)"}]}]}]}], "Input",
 CellChangeTimes->{{3.745518661864081*^9, 3.745518815329257*^9}, {
   3.7455188670981483`*^9, 3.745518957803743*^9}, {3.745519092908403*^9, 
   3.7455191522146597`*^9}, {3.7455192162346478`*^9, 
   3.7455192911890182`*^9}, {3.7455194662050867`*^9, 3.745519579894045*^9}, 
   3.745519713476964*^9, {3.7455198297671833`*^9, 3.745519846412064*^9}, {
   3.7455200174644527`*^9, 3.74552002121558*^9}, {3.745520264819376*^9, 
   3.745520288448566*^9}, {3.745520350826852*^9, 3.745520475789703*^9}, {
   3.7455205287686367`*^9, 3.745520548195862*^9}, {3.745520655245624*^9, 
   3.745520674595971*^9}, {3.745520708499161*^9, 3.745520736149418*^9}, {
   3.745521018790608*^9, 3.745521128266633*^9}, {3.745521261173218*^9, 
   3.745521321040207*^9}, {3.74552136589614*^9, 3.7455214180652122`*^9}, {
   3.7455214524583883`*^9, 3.745521488508874*^9}, {3.745521519837501*^9, 
   3.745521547774222*^9}, {3.745522167590763*^9, 3.745522372048099*^9}, {
   3.745522444802681*^9, 3.745522459940868*^9}, {3.74552249110502*^9, 
   3.745522529419485*^9}, {3.7456040428973207`*^9, 3.745604193925753*^9}, {
   3.745604281486476*^9, 3.745604524890366*^9}, {3.7456132115019493`*^9, 
   3.745613211880642*^9}, {3.745613274571353*^9, 3.745613395970419*^9}, {
   3.745613597053097*^9, 3.74561361185489*^9}, {3.7456136719075327`*^9, 
   3.745613680413786*^9}, {3.745613750900989*^9, 3.745613756065164*^9}, {
   3.7456137948794947`*^9, 3.745613796206884*^9}, {3.745613905830217*^9, 
   3.7456139198770523`*^9}, {3.745614145077396*^9, 3.745614276785385*^9}, {
   3.745614394375053*^9, 3.745614394735445*^9}, {3.745614444830059*^9, 
   3.745614487981372*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"C1", " ", 
    RowBox[{"sin", "(", 
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{"a", "-", "L"}], ")"}]}], ")"}]}], "-", 
   RowBox[{"A", " ", 
    RowBox[{"cos", "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.745518888554782*^9, 3.745518902614287*^9}, 
   3.745518959214345*^9, 3.745519158865589*^9, 3.745519258165615*^9, 
   3.745519295092557*^9, 3.7455195886269703`*^9, {3.7455198353550997`*^9, 
   3.7455198473358393`*^9}, 3.74552004561313*^9, {3.745520273525001*^9, 
   3.745520289682193*^9}, {3.745520394936199*^9, 3.745520476410821*^9}, {
   3.7455205356234283`*^9, 3.745520548979576*^9}, 3.745520675673678*^9, {
   3.745520712380823*^9, 3.7455207374050627`*^9}, {3.7455210282515297`*^9, 
   3.745521129621139*^9}, 3.745521322969349*^9, 3.7455213820713797`*^9, 
   3.745521491189189*^9, {3.745521526787444*^9, 3.745521551151*^9}, 
   3.745522212232307*^9, {3.7455223162115097`*^9, 3.745522327197116*^9}, 
   3.745522374022245*^9, 3.745522460786233*^9, {3.745522504246793*^9, 
   3.745522529900042*^9}, 3.745604100777256*^9, {3.745604183719273*^9, 
   3.7456041953872843`*^9}, 3.7456044919520493`*^9, 3.7456045256939487`*^9, 
   3.745613615571433*^9, 3.745613797830943*^9, 3.7456140085965242`*^9, 
   3.745614277683362*^9, 3.745614400819111*^9, 3.7456144888476543`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{"A", " ", "kp", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"a", " ", "kp"}], ")"}]}]}], "-", 
   RowBox[{"C1", " ", "k", " ", 
    RowBox[{"cos", "(", 
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{"a", "-", "L"}], ")"}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.745518888554782*^9, 3.745518902614287*^9}, 
   3.745518959214345*^9, 3.745519158865589*^9, 3.745519258165615*^9, 
   3.745519295092557*^9, 3.7455195886269703`*^9, {3.7455198353550997`*^9, 
   3.7455198473358393`*^9}, 3.74552004561313*^9, {3.745520273525001*^9, 
   3.745520289682193*^9}, {3.745520394936199*^9, 3.745520476410821*^9}, {
   3.7455205356234283`*^9, 3.745520548979576*^9}, 3.745520675673678*^9, {
   3.745520712380823*^9, 3.7455207374050627`*^9}, {3.7455210282515297`*^9, 
   3.745521129621139*^9}, 3.745521322969349*^9, 3.7455213820713797`*^9, 
   3.745521491189189*^9, {3.745521526787444*^9, 3.745521551151*^9}, 
   3.745522212232307*^9, {3.7455223162115097`*^9, 3.745522327197116*^9}, 
   3.745522374022245*^9, 3.745522460786233*^9, {3.745522504246793*^9, 
   3.745522529900042*^9}, 3.745604100777256*^9, {3.745604183719273*^9, 
   3.7456041953872843`*^9}, 3.7456044919520493`*^9, 3.7456045256939487`*^9, 
   3.745613615571433*^9, 3.745613797830943*^9, 3.7456140085965242`*^9, 
   3.745614277683362*^9, 3.745614400819111*^9, 3.745614488850807*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"C3", " ", 
    RowBox[{"sin", "(", 
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{"L", "-", "a"}], ")"}]}], ")"}]}], "-", 
   RowBox[{"A", " ", 
    RowBox[{"cos", "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.745518888554782*^9, 3.745518902614287*^9}, 
   3.745518959214345*^9, 3.745519158865589*^9, 3.745519258165615*^9, 
   3.745519295092557*^9, 3.7455195886269703`*^9, {3.7455198353550997`*^9, 
   3.7455198473358393`*^9}, 3.74552004561313*^9, {3.745520273525001*^9, 
   3.745520289682193*^9}, {3.745520394936199*^9, 3.745520476410821*^9}, {
   3.7455205356234283`*^9, 3.745520548979576*^9}, 3.745520675673678*^9, {
   3.745520712380823*^9, 3.7455207374050627`*^9}, {3.7455210282515297`*^9, 
   3.745521129621139*^9}, 3.745521322969349*^9, 3.7455213820713797`*^9, 
   3.745521491189189*^9, {3.745521526787444*^9, 3.745521551151*^9}, 
   3.745522212232307*^9, {3.7455223162115097`*^9, 3.745522327197116*^9}, 
   3.745522374022245*^9, 3.745522460786233*^9, {3.745522504246793*^9, 
   3.745522529900042*^9}, 3.745604100777256*^9, {3.745604183719273*^9, 
   3.7456041953872843`*^9}, 3.7456044919520493`*^9, 3.7456045256939487`*^9, 
   3.745613615571433*^9, 3.745613797830943*^9, 3.7456140085965242`*^9, 
   3.745614277683362*^9, 3.745614400819111*^9, 3.745614488854557*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"A", " ", "kp", " ", 
    RowBox[{"sin", "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}], "-", 
   RowBox[{"C3", " ", "k", " ", 
    RowBox[{"cos", "(", 
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{"L", "-", "a"}], ")"}]}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.745518888554782*^9, 3.745518902614287*^9}, 
   3.745518959214345*^9, 3.745519158865589*^9, 3.745519258165615*^9, 
   3.745519295092557*^9, 3.7455195886269703`*^9, {3.7455198353550997`*^9, 
   3.7455198473358393`*^9}, 3.74552004561313*^9, {3.745520273525001*^9, 
   3.745520289682193*^9}, {3.745520394936199*^9, 3.745520476410821*^9}, {
   3.7455205356234283`*^9, 3.745520548979576*^9}, 3.745520675673678*^9, {
   3.745520712380823*^9, 3.7455207374050627`*^9}, {3.7455210282515297`*^9, 
   3.745521129621139*^9}, 3.745521322969349*^9, 3.7455213820713797`*^9, 
   3.745521491189189*^9, {3.745521526787444*^9, 3.745521551151*^9}, 
   3.745522212232307*^9, {3.7455223162115097`*^9, 3.745522327197116*^9}, 
   3.745522374022245*^9, 3.745522460786233*^9, {3.745522504246793*^9, 
   3.745522529900042*^9}, 3.745604100777256*^9, {3.745604183719273*^9, 
   3.7456041953872843`*^9}, 3.7456044919520493`*^9, 3.7456045256939487`*^9, 
   3.745613615571433*^9, 3.745613797830943*^9, 3.7456140085965242`*^9, 
   3.745614277683362*^9, 3.745614400819111*^9, 3.7456144888576393`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"A", "\[Rule]", "0"}], ",", 
    RowBox[{"C3", "\[Rule]", "0"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.745518888554782*^9, 3.745518902614287*^9}, 
   3.745518959214345*^9, 3.745519158865589*^9, 3.745519258165615*^9, 
   3.745519295092557*^9, 3.7455195886269703`*^9, {3.7455198353550997`*^9, 
   3.7455198473358393`*^9}, 3.74552004561313*^9, {3.745520273525001*^9, 
   3.745520289682193*^9}, {3.745520394936199*^9, 3.745520476410821*^9}, {
   3.7455205356234283`*^9, 3.745520548979576*^9}, 3.745520675673678*^9, {
   3.745520712380823*^9, 3.7455207374050627`*^9}, {3.7455210282515297`*^9, 
   3.745521129621139*^9}, 3.745521322969349*^9, 3.7455213820713797`*^9, 
   3.745521491189189*^9, {3.745521526787444*^9, 3.745521551151*^9}, 
   3.745522212232307*^9, {3.7455223162115097`*^9, 3.745522327197116*^9}, 
   3.745522374022245*^9, 3.745522460786233*^9, {3.745522504246793*^9, 
   3.745522529900042*^9}, 3.745604100777256*^9, {3.745604183719273*^9, 
   3.7456041953872843`*^9}, 3.7456044919520493`*^9, 3.7456045256939487`*^9, 
   3.745613615571433*^9, 3.745613797830943*^9, 3.7456140085965242`*^9, 
   3.745614277683362*^9, 3.745614400819111*^9, 3.7456144889095287`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Lambda]", ",", "V0", ",", "k", ",", "kp", ",", "a", ",", "f1", ",", 
    "f2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]", "=", "1"}], ";", 
  RowBox[{"V0", "=", "2"}], ";", 
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   RowBox[{
    FractionBox["k", "kp"], "-", 
    FractionBox[
     RowBox[{"Tan", "[", 
      RowBox[{"kp", " ", "a"}], "]"}], 
     RowBox[{"Tan", "[", 
      RowBox[{"k", " ", "a"}], "]"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f2", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Tan", "[", 
       RowBox[{"kp", " ", "a"}], "]"}], " ", 
      RowBox[{"Tan", "[", 
       RowBox[{"k", " ", "a"}], "]"}]}], "+", 
     FractionBox["k", "kp"]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f1", "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"kp", ",", 
        SqrtBox["V0"], ",", 
        RowBox[{"5", "+", 
         SqrtBox["V0"]}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f2", "\[Equal]", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"kp", ",", 
        SqrtBox["V0"], ",", 
        RowBox[{"5", "+", 
         SqrtBox["V0"]}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], "]"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f1", "\[Equal]", "0"}], ",", 
     RowBox[{"f2", "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"kp", ",", 
     SqrtBox["V0"], ",", 
     RowBox[{"10", "+", 
      SqrtBox["V0"]}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7455923363313847`*^9, 3.7455923830736*^9}, {
  3.745592427054756*^9, 3.74559246837411*^9}, {3.74559256922174*^9, 
  3.745592688955925*^9}, {3.745592736422471*^9, 3.745592837289847*^9}, {
  3.745593024100299*^9, 3.745593029642383*^9}, {3.745593109888186*^9, 
  3.745593158882331*^9}, {3.745593231285918*^9, 3.745593245912086*^9}, {
  3.745593294063129*^9, 3.745593297752267*^9}, {3.745594442685873*^9, 
  3.745594488411965*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
WpYBD08sm5syOoo4/aOGJ5KxaU2j6MIlZP5zUgO4y39+Mi0fRW9HEjIOd2sA
Wd30iV7aKOL0p2Iey1+ovTCKkj9If3haoAHUR/P3tEWNIreAI8cq8jVgcsKe
x9tnFHH6X8/eM8qe2I2iAyJ5XHF3NMBgOvxNH20UhVUMCGWd0YCjX3tbBuVG
Eae/xtl/t9HGSvHtGhDokfwoN2cE5Sx/tcZnowbsbbtpsDVtBHH6d28jJB7l
x+F6YmVN8ZStBuQfcBqIshxBnH5gttveSiWlEXRXJTRVSloDNm/6Uff5v2HE
6S9y9HM0he/ly2Y6OOozEi2x/n79su/OCez3zDMUn5RLDCNO/3KAf170XZ8h
9HEVit79lA69Ti86a/WGEKcfauzz0eaL+hBqbSCPuGI/zLEXxxTdrYpX6KDb
tNWfNDmAOP3WqlPhe0Q/DSBn8SgzbW86aEhP35Rb0I84/dvrulSl+zr9SETU
7Xwn0An7ra6XSTmJ6SU2+y80SfejQTnBA4cQnbD//DHlPDdNvD5Fvvobz3uQ
T0hBgDyFTviPFaM+uzPkcJxRenfx8ZFuxOknFzrKeJX6/UIf9M3e8gnRCX90
c+L6BW0BLI9E301TiZ3o5IPj44d56YQ/a9K/7180RgNmc3h4ZmUb2nj9lEbn
yN/nZI36Xa3oSYBTb+8QjfCPctnMLVX9NAg8ZvaUd1cLGonMTk/spcHnFXqj
pICfSLF06e5qnJdw/O2SZq5bM+eyRK8I+RztbkK+fR5BDV202fU2om3JUe5p
OE+5WOMVWiLe8G//23HetsRm8E5WPaqN7J4n00Yj/PvP1R4npTCtzg4r7/Ku
R+rZ/41IY/rEzjdnkmO+otda72vvNdH+Xw/ZCD5Ix7QJjcV7XqcGLVUoGfyB
6ZNHa+JybCuR592qQPoPGhF/PK9sf30c072HH3p9VKpAWcjx6RSmK+xbqa7f
PyJu8XSj7bU0Ip5Z5wVutaijAatkbe4Lzw9IkeccO6SeBsPCujKDUtlo+4Vn
7f1faUS83J86uLwH5+3Kk3El0lXpyNngXnnaaxocv60+uMBPDL3ij+L5XU4D
yxWL5eIvC8+e/2GCZfihoFvGwuBTMKC7u4AJ6xZ0UMBCGAYmb7B3v2JCxJV5
P5Mw/t/5HyYIPPx9fnKBMKjaPIr6EcuEa+2+B0mLhMHb6LNv9ylMC3jWv8P4
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
fYjxNzOf9BVOU4H5biWjgcUg3mcwzSk+shbPp3p3QrqONA0Oxgs+jsT44lu+
77fOpcGX6N654xjPeZ8hwpDssAjjf5uVL3y5mAZJae9XO2F83qn2mgZnGqRv
6Rqe6cdz3mdYmjz+Wwfjtw2VacjupsHKDIctPBifC0oikpE0uOTKuJXFZhDv
M7DrR9qVMb5j332x4VgaDB5/s2vuCN6fRV4K717SoEPRak/e+Kw8c2ggvCZq
XBjjL/raDulU0Qh7+Mn2zQztooHAR9ng3VQm1FpfqCqZef/S7rER3wom6G+8
4K7Eeb8W25+6745wj180SBA8H710DRN+vFESO4nx+UG3rQ8fYQIf7X0MXxWN
sG9Q2V4Wj/Fu8pO0d8exve7NjtiB8Y6dqTfEHjBh6t7WYAnO+7XYf5BLYt/N
vF/rrLpQ3PUJE37tPBxij/mnb3z1TfnMhIn4zspazvu12D85ycqZfTQVJt6/
pliG1JjNEwbxvBBZOf5R9N20VfSxpTCMBmrM4T81itbWb6+4gvGc97uVuBU1
janC8H1I+WLuOhYS3bLnciDmc94P5/S7dPW7b9rherZK4Cc1IUMIdDJUtzr+
ZqGIibREmV1CcIsd2qlvwvleghD0fhpMT5x533zAh8mSEQJV65vLXkqykYXl
VO76TEFweBXaPKbDqb8EgZYzcvz2ThZibNpb7r9FEMILZQ7uUmCjRYOLJBG/
IPjdurLbR4tTnwqAXYndpzu7WOiWIy+SXykA644/neuC6zFOf4w93qlzezcL
RZ9/WOLazQ/KY50W2YGz38faww8px0TIt3F99lVDT6uskQ+ORtSlm7nPvu+f
zgdpVhW/E/ayUOHCrwG7g/hgxDSRbnSCIw8+eL43m5y5j4Ukvz5szavghXsb
H7dHq7GRcaR6r/ohXjBvfuGhyOTIgxeumj/wat3PQltNjhloKfMC7fMbJ1lc
X6+f0iyRe8sDc5B+xSEmRx48sO/F42EDXxY6+UIzNdSDB2yORJgEYXyRs4TA
AD8PbCkfCuTVZCNO/0y35ThX6kEWuhfotrk6kRucS9y96zDeONjpavIabnj6
qS+0nOhncEP4nVcXww+zUKmdK402wgVn5pSW6+D9GvVVare8xgWrDfmFBrQ4
9TcX3Dw7Glvrx0ILvavcdiIusBDT0jiI8Xa0og+Md9NIfDHX/Pg5HPw0cvxp
+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
qM86O0vRR4Y4nxq/v/z4u4M1c9HzyThGfDKVgbmtahlPZ5DAw6yCtW6uDMEf
Pl3nZisjIQMjWdMPpEqSQDJm8cG0n9Igrr9oT9CoCpyoyTiRi/wirq/4enTv
0qM8uq4CYRnPyqU3SUPTYtvWXdEqQH5ybPGy+dIEH5idGVldTpaGN82JGjxn
FWL9/Q2XdCXNUIFoytLV5k+kYOtsl0u+6irg6pFrtq9YiuD3ruoxM75wAMU5
a0XGXfqU4Z7LmcG7plKw8ldfomSVMlw5338XmyZF8HMXum2blTRVCrgzlZd6
31Ym5CM3caPT5RJleNGuOiKaLknwc2l3JRt3xEiC1RU5OV17ZUL+Xmx+suky
pgy+594uSpWVJPi353es9DvTLQH83nWpOxunQOP+KZKDeyUIvm3fRL5xnakE
jKUlCA+RphD6kCAS/mu8UQncVtYznj4RJ/i1nPJtK6jx4tCvtV0mzEmJ0K/h
3c6bqqhKMJS4xViFKk7wa8cXiFMfvhGDOUObPDQuKBL6quXb59LmpgiSorXh
ZmvECP6s1u3txkk0MTAoj/VM+a5A2APaymuSX+4owLm71ygq8aIEfzb9fiN2
10kUWiRuRNy2UiDszYr3rieSOAow6rGz3LdAhODLXnxd8qI5VgR+m2xld6bL
E/bsVTTdJSBOHhLZ0bd0d08Q/tw44tHRL8g+aiUuq1aRlifsZXN2vKk0agtq
zBOlUdstYtNYnZQ8YW+jQpguqsfkoIf+Oragehzbe6Kpb/8OOaiqmJZSs32c
iC+e9N8lS3aMYdTqqwsGdOQIe57I96U6qcpByR6Z5PNjv7GZ+S/jbDplYT/T
0NMm7DemLH2i3u6pLOEfYnes69l9VRaSk7g381R/Y/Xm8gmfUXxjnJB63GvK
byL+Mco+kLbQ/Bd2cv2VGZZOsoT/8VvF4b9YLAsp/me/zN78X3y1aslZhVdp
aB/FsdIhNcqAJKMiZUuskIjfBs7Ia6wNRvuya97Hx1E8aPcjaWogiqfweDE1
/PbhWyiemNvO/HmVJQMh+XP1y44JMR1rrXN7YqRBsmOBw6bnAiL+XVn0qtod
xRMa57yvaW2VBvOeCeaaOCHW/DJqXlWdFGTbHJUVey0g9gcH7wUO1p0SYjaP
p9SK5kmBzsu8MFV0/wMhAacUmVIQ+0SiTe2NAMPrdUlu1gyIQXjuwhnZYqOS
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
93jByQ==
     "], {{{}, {}, 
       TagBox[
        TooltipBox[{
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
           18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,
            35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
           51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
            68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 
           84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 
           100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
           113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 
           126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 
           139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 
           152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 
           165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 
           178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 
           191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 
           204, 205, 206, 207, 208, 209, 210}], 
          LineBox[CompressedData["
1:eJwl0lWQEAQUBdBdQLoblEZaGkHp7lo6hZUOKWmkW+lGWgmlOySkpWN7CWnp
BgVUOAwf577fe2deluAeQd8EBgQExBUhbihhhBNBJFFEc4GLXOIyf3KFq1zj
Oje4yS3+4jZ3uMs97vOAhzziMU94yjOe84KX/M0/vOI1b/iX//iftwToHUgM
YhKLj4hNnMAPu+IRnwQkJBGJSUJSkpGcFKQkFalJQ1rSkZ6P+YQMZCQTmclC
VrKRnU/JQU5ykZs85CUfn5GfAhSkEIUpQlGK8TnFKcEXfElJSlGaMpSlHOWp
QEUqUZkqVKUa1alBTWpRmzrUpR71CaIBDWlEY5rQlGY0pwUtaUVrvqINbQnm
a9rRng50pBOd6UJXutGd90/Xg570ojd9+Ja+9KM/AxjIIAYzhO8YyjCGM4KR
jGI0YxjLOMYzgYl8zw9MYjJTmMo0pjODmcxiNnOYyzzm8yMLWMgiFrOEpSzj
J35mOStYySp+4VdWs4a1rGM9G9jIJjazha1sYzs72MkufmM3e9jLPn5nPwc4
yCEOc4Sj/MExjnOCk5ziNGc4yznOE0IoYYQTQSRRRPMOBVOIzA==
           "]], 
          LineBox[CompressedData["
1:eJwVzsk2AmAAgNG/DCkZosxUyizlVWzsPYAe2JBE5imZRbfFPedbfvmD6t5h
JISwz5E45oRTapxR55wGF1zS5IprbrjljnseeOSJZ15o8UqbN9754JMvvvnh
lw5//PfGoiFEiNJHPwMMEmOIOAmGSTLCKGOMk2KCSdJkmGKaGWaZY54FFlki
S448yxQossIqa6yzwSZbbFNihzIVdukCHaspng==
           "]], 
          LineBox[CompressedData["
1:eJwNwwNWRAEAAMBfN+kK2XbtVptdm7HItm37ps28N2nRRCSeEgRB0vTUIMgw
0yyzzTHXPPMtsNAiiy2x1DLLrbDSKqutsdY6622w0ZBhm2y2xYitttluh512
2W2PvfbZ74CDDjls1BFHHXPcCSedctoZZ40ZN2HSOeddcNEll11x1TXX3XDT
Lbfdcdc99z3w0COPPfHUM8+98NIrr73x1jvvffDRJ5998dU33/3w0y+//fHX
P/8BNCsxLA==
           "]], 
          LineBox[CompressedData["
1:eJwNw9c6AmAAANBfb+KVunPbA/BOCGWGrGRLtowIyciOkBFXzvm+0xrriLa3
hBDa7IyE0GW3cXvstc+ESfsdcNAhhx0x5ahjjpt2wkmnnHbGjLNmnXPeBRdd
ctkVV825Zt51N9x0y2133HXPgvseeOiRRY89seSpZ55b9sKKl1557Y1Vb73z
3gcfffLZmi++WvfNdz9s+OmX3/7Y9Nc//wEyVUpd
           "]], 
          LineBox[CompressedData["
1:eJwNw1NyRAEAALC3tW1vbdu2bWxtfPXuZTKTcOR18yUUBMGnX1FB8O2Pv/4Z
RAdByCijjTHWOONNMNEkk00x1TTTzTDTLLPNMdc88y2w0CKLLbHUMsutMGyl
VVZbY6111ttgo00222KrbbbbYadddttjr332O+CgQw474qhjjjvhpFNOO+Os
c8674KJLLrviqmuuu+GmW26746577nvgoUcee+KpZ557YcRLr7z2xlvvvPfB
R5989sVX33z3w38GiCIb
           "]], 
          
          LineBox[{883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
            895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 
           908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 
           921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 
           934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 
           947, 948, 949, 950, 951}], 
          
          LineBox[{952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
            964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 
           977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 
           990, 991, 992, 993, 994, 995, 996, 997}], 
          LineBox[CompressedData["
1:eJwNw9VWFFAAAMC7sHSKdLp0SQlIK6KUtDTIAx8Az/wwJS3dM+dMbHt3YScS
QthzPz6EAw898th/nnjqmedeeOmV/732xlvvvPfBR5989sVX3wzRECLGGW/U
BBNNMtkUU00z3QwzzTLbD+b40VzzzLfAQosstsRSyyy3wk/GrLTKamustc56
G2y0yWY/22Krbbbb4Rc77bLbr/bYa5/9DjjokN/87rA/HPGnvxx1zHEnnPS3
U04746xzzrvgHxddctkVV11z3Q03/euW7zZ7Lgk=
           "]], 
          
          LineBox[{1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
            1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 
           1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 
           1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 
           1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 
           1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 
           1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193}], 
          LineBox[CompressedData["
1:eJwNwwdXiAEAAMAvSmRv2dlkZSSyqVBG2WSVPUqZv8kse2Vlh0hkZ2RUNtnr
7r2LyshOywoJgqDYHaFBsNNd7naPe80z333u94AHPeRhj3jUYx73hAWe9JSn
PeNZCz3neS940Ute9opFXvWa1y32hjct8Zal3vaOZd71nvd94EMf+dhyn/jU
Zz63whe+9JWvrbTKat/41ne+94Mf/eRnv1jjV7/53R/+9Je//eNf/xmEBUGI
taxtqGHWMdy61jPC+jawoY1sbBOb2szmtrClrWxtGyNtazvb28GOdrKzUXax
q93sbg972sve9jHavvazvwMcaIyDHOwQhxrrMOMc7gjjHekoRzvGsY5zvBOc
aIKJJjnJyU4x2RSnOs3pzjDVNGc6y9nOca7znO8CF5ruIhe7xKUuM8NMl7vC
la5ytWtc6zrXu8Ess91ojrlucrNb3Oo2t/sfOCxp9w==
           "]], 
          LineBox[CompressedData["
1:eJwNw1k2AlAAANDXh4XYUccSLIBvFRFlTJkyVUQkkUiGREiyLPeec8cnpyem
IiGEqDNjIcSMm3DWOZPOu2DKRZdMm3HZFVddc90Ns26aM++W2+64654F9z3w
0COPLVqy7ImnVjzz3KoXXlrzyrrXNrzx1qZ3trz3wbaPdnzy2Rdf7fpmz3c/
7Pvpl98O/HHoryP//Ae4oTW8
           "]], 
          
          LineBox[{1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
            1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 
           1502, 1503, 1504, 1505}], 
          LineBox[CompressedData["
1:eJwN0+eDyAUAgOHfccMtjhtuFYd2KVGpa9GiQl20qS5EclfakQbtoSWZKVrS
HlRWe9JAFBq3975z+zwfnvc/eDOyc7NyQoIgyJS8sCDIp4BCiiimhFLKKKeC
SqqopoZa6qingUaa2E8zLbTSRjsddNJFEB4EIXSjO6GEEU4EPYgkimhiiKUn
vYijN32IJ4FEkuhLMimkkkY6B3Ew/ehPBgMYyCAO4VAO43CO4EiO4miOYTDH
chxDOJ6hDOMETuQkhnMyp5DJqZzG6ZzBmYxgJGdxNudwLucxitGczwVcyBjG
Mo6LuJgsLmE8E7iUy7icK7iSq7iaiUziGq7lOrK5nslMYSo3MI3p3MgMbmIm
OeRyM7cwi1u5jdu5gzu5i7u5h9nM4V7mch/38wAPMo/5PMTDPMKjPMbjPMGT
PMXTLOAZnuU5nucFFvIii3iJxSxhKctYzgpeZiWv8CqrWM1rvM4bvMlbrOFt
1vIO7/Ie7/MBH/IRH/MJn7KO9XzG53zBBjayic1s4Uu+4mu+4Vu+43t+4Ed+
4md+YSvb+JXf+J0/2M4OdvInu9jNX/zNHvayj3/4l//4nzzyKaCQIoopoZQy
yqmgkiqqqaGWOuppoJEm9tNMC6200U4HnXQRRPifbnQnlDDCiaAHkUQRTQyx
9KQXcfSmD/EkkEgSfUkmhVTSSOcAQJumlg==
           "]], 
          LineBox[CompressedData["
1:eJwNw+c2kAEAANCvX56ioqgkUalEC9EuRBFllMoWGlQqpaRhpKElLUI0UUhD
nqt7z7lhxdWZVfOCIBh0fkgQLHChoYa5yMWGG+ESl7rMSJcb5QqjXWmMsa5y
tWuMc63rXG+8G0ww0Y1ucrNb3GqSyaa4zVTT3O4Od7rL3e5xr/vcb7oZZnrA
LLM96CFzzPWweeZ7xKMWWGiRxR7zuCWe8KSnLLXMciustMpqazxtrXXWe8az
nvO8DTZ6wYtessnLXvGqzV7zui3e8Kat3rLN297xrvdst8NOu7xvtw986CMf
2+MTn/rM576w15f2+crXvvGt7+x3wPcOOuSwHxxx1I9+8rNf/Oo3xxx3wu/+
cNIpp/3pjL/87R//Ous/5/wPSM9SYw==
           "]], 
          LineBox[CompressedData["
1:eJwNw2dbjQEAAND3Ik0yk4a6QmVWZKQ00EAaIpTR1fCp/lN/xh4to0jISEal
VITOeZ4TjvQ0doeCIOj1TnQQ3PWe933gQx/52Cc+tc9+Bxx0yGc+94UvHXbE
V7521DeO+dZ3vnfcD370k5+d8IuTfvWb3/3hlNPO+NNZ5/zlvAsu+ts/LvnX
f/43iAmCkCtc6SqjXG20McYaZ7wJrnGtia5zvRvc6CY3m+QWk91qiqmmme42
M8w07Haz3OFOd5ltjrnudo973ed+D5hnvgUe9JCFHvaIRz1mkccttsQTllpm
uRWe9JSnrbTKams841nPWet566y3wUYv2ORFL9nsZa941RZbveZ1b3jTNiPe
st0OO+3ytsukck8M
           "]], 
          LineBox[CompressedData["
1:eJwNw+dajgEAANC3Il8U0RV0Sy7BP9GXklFChCSrYSvKrIyMEiEVDSMlGVmF
NEhSZsQ5z3MSF6UsDEcEQVDl4lAQJLnEpSYbNsVlpprmctNd4UpXudoMM11j
lmtd53qz3eBGc9zkZreY61bz3Ga+293hTne52wILLbLYPe51n/s94EEPedgS
Sz3iUcss95jHPeFJT3naCiut8oxnPed5q73gRS952RprvWKdV71mvde94U0b
vGWjTTZ72zu22Gqb7d71nvd9YIcP7bTLR3b72B6f+NRnPrfXF770la99Y5/9
vvWd7x3wg4MOOeyIH/3kqJ8d84vjfnXCSb/53R/+9Je/nfKPf532n0FMEEQY
aZQznGm0swwZ42znGGucc51nvPNdYIL/AXPacrU=
           "]], 
          LineBox[CompressedData["
1:eJwNw2dbjQEAANDXR99ltYuGWZQiaZGV1A1Nq1Ap96pooCKrSIMiXNIwUvEX
O+d5TnJzJBTeFARB1C2bgyDGrW5zuzvcaaxxxptgokkmm2Kqu9xtmulmmOke
97rP/R7woFlme8jD5pjrEfPM96jHLPC4hZ6wyGJLLLXMk56y3NOe8aznPG+F
F6z0olVWG7LGS172irXWWW+DjTZ51Wte94Y3bbbFW972jq222e5dO+z0nmEj
3rfLbnt84EN77bPfAR/52CcOOuSwT33miM994Utf+dpRx3zjW8d954STTjnt
ez8446wf/eScn/3iV6N+87vz/nDBRZdc9qe//O0fV/zrqmuu+8//bgABE0M2

           "]], 
          LineBox[CompressedData["
1:eJwNw2c3lgEAANCHSnlFk7TUW2kpJaUhmjTQQEb61A+oX9Y5KKKQJi1JSBOV
0h5Ky7r3nBs+fbbwTEQQBOesjA6CKqs97wVrrPWiddZ7ycs22GiTV2z2qte8
7g1vessWW73tHe96z/u2+cB2H9rhIzvtstvH9vjEpz7zuS98aa999vvK175x
wLe+c9D3fvCjn/zsF7/6ze/+cMif/nLY3/7xr//874ijjjluEAqCCCOd5GSn
GOVUpxltyBinG2ucM5zpLGc7x7nGm+A8E53vAhe6yMUmucSlhl3mcleY7EpX
udo1rjXFda431Q1uNM1NprvZLWa41W1ud4eZ7jTLbHe52z3udZ/7zTHXAx70
kIfNM98Cj3jUYx630CKLPWGJpZZZ7kkrPOUEHF5c4Q==
           "]], 
          LineBox[CompressedData["
1:eJwNw1c7lgEAANDXbf/CX3Kv+CqaFLKlpVAZSTTMUFqyImVUKg1RKRWJskpo
UblyzvOc8FB8RFxYEASVRm4Igo1uMspoQ252i1uNMdZtbneHO93lbuOMd497
TTDRJPeZbIqpppluhplmud9sD3jQQx72iDke9Zi55pnvcU940gILLbLYU5Z4
2lLPWGa5Zz3neS9YYaVVVltjrRets94GL3nZRq941Wte94ZN3rTZFltts91b
dtjpbbu841277bHXPu953wf2+9BHPnbAJz71mc8d9IVDDvvSV752xDe+ddR3
vveDY4770Qk/OemUn/3itDPOOue8X/3mgt9ddMllf/jTX/72jyuu+td//nfN
debJclc=
           "]], 
          LineBox[CompressedData["
1:eJwNw2dbjQEAAND3hugW2TOUZGemzLIrsqKyUi4KLatBw4yQUiK7pIw+9f9U
nPM8JylSk18dCoJgxL/hIBh1zHH/GcQGQcgoJzjRSUY72SnGGDbWOKc6zXin
O8OZznK2c5zrPOe7wIUuMsHFLnGpiSa5zGSXm+IKV7rK1a5xretMdb0b3Ogm
N7vFNLeabobb3O4Od7rL3Waa5R73us/9HvCgh8w2x1wPe8Q8j3rM457wpPme
8rQFFlrkGc96zvNesNiLlljqJSNe9opXLbPca173hhVWWmW1Nd70lre9411r
rbPeBu9530abbLbFBz70kY994lNbfeZz23zhS1/Z7ms77PSNXXb71h7f+d5e
P/jRT372i1/9Zp/9fnfAHw465E9/+ds/DvsfWK1Hpw==
           "]], 
          LineBox[CompressedData["
1:eJwNw2dbjQEAAND3knmzS8i6ZVSSTUllNqySjMYnP6B+WISMSjaRjLJnyghF
iGSUOOd5TuRQVXFlKAiCWqvDQXDYI9Z41GMet9YTnvSUp62z3gbP2OhZz3ne
C170kpe94lWbvOZ1m71hize95W3v2Gqbd73nfR/40Ec+9olPfeZzX9juSzvs
9JWvfeNbu3znez/YbY8f/WSvn/3iV/v85nf7/eGAP/3lb/846JB/HfafQXQQ
hBzhSKMc5WjHONZxjjdstBOc6CQnO8WpTjPGWKcb5wxnOst4ZzvHuc5zvhET
THSBC13kYpNMNsUlprrUNJe53BWudJWrXeNa15luhuvNdINZZpvjRje52S1u
dZu55plvgdvd4U53udtCi9xjsXstcZ/7PeBBSy2z3Ar/AxFBYdg=
           "]], 
          LineBox[CompressedData["
1:eJwNw9daiAEAANDfvZfoldynZLSoNJQkiUhm0lYplIaszBQNikrTSEWTtDTI
rXO+74RExO+K2xEEQbmhO4Ngt2GGu8cI97rP/R4w0iijjTHWgx4yzngTPGyi
SSab4hFTTfOo6R4zw+NmesIsT5rtKU+b4xnPmus58zzvBS96ycteMd+rFnjN
QosstsRSyyz3uhVWWuUNq63xpre8ba113rHeBhtt8q7N3vO+D3zoI1t87BOf
+sznvrDVl7bZ7itf22GnXXb7xrf22Os739tnvwN+cNAhhx1x1DE/+snPfnHc
r0446ZTf/O60M84657wL/vCni/5yyWVXXHXN36674aZb/vGv2/7zPwgccIE=

           "]], 
          LineBox[CompressedData["
1:eJwNw2c7lQEAAND3pqGMppE0btGUlURIVkOKtMm6ZiqXihQtkgiJ+up3hoZz
nueEI9HGgVAQBCv+jg+CVddc949//ed/g4QgCLnJGDe7xa1uM9bt7jDOeBNM
dKe73O0e97rPJJNNMdX9pnnAdA96yMMeMexRj5lhpsc94UlPedozZnnWbHPM
Nc98z1ngeQu9YJHFXrTEUsu8ZLmXrbDSKqut8YpXveZ1a71hnTe9Zb0N3rbR
O971nvd94EMf2WSzj22x1Tbb7TBip11222OvfT6x36c+87kDRh10yBe+9JXD
jvjaUd/41jHHfed7P/jRT0446Wen/OK0X51x1m/OOe+C3130h0su+9NfbgD8
Vz3T
           "]]}, 
         RowBox[{
           RowBox[{
             FractionBox["k", "kp"], "-", 
             RowBox[{
               RowBox[{"Cot", "[", "k", "]"}], " ", 
               RowBox[{"Tan", "[", "kp", "]"}]}]}], "\[Equal]", "0"}]], 
        Annotation[#, $CellContext`k/$CellContext`kp - Cot[$CellContext`k] 
          Tan[$CellContext`kp] == 0, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          
          LineBox[{3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487,
            3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 
           3499, 3500, 3501, 3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 
           3510, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 
           3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530}], 
          
          LineBox[{3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540,
            3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 
           3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 
           3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 
           3574}], 
          LineBox[CompressedData["
1:eJwN01VjkAUAQNFvNINt1EYzulsBaZROaWmQEFG6u5XuUBrpBulOlZZQVFA6
pEHp5jyc+w9uhpadancMCYIghzwLC4LnvOAlr3jNG97yjiA8CEKIQUxiEZs4
xCUe8QklAQkJI5wIEpGYJCQlGZFEkZwUpCQVqUlDWtIRTXoykJFMZCYLWclG
dnKQk1zkJg95yUd+ClCQD/iQQhSmCB9RlGIUpwQlKUVpyvAxn1CWcpSnAhWp
RGWqUJVqVKcGn1KTWtSmDnWpR30+owENaURjmtCUZjSnBZ/Tkla0pg1f0JYv
acdXfE17OtCRTnSmC13pRnd60JNe9KYPfelHfwYwkEEMZghDGcZwvuFbRjCS
UYxmDGMZx3gmMJFJTGYKU5nGdL7je2Ywk1nMZg5zmcd8fmABC1nEYpawlGUs
ZwUrWcVq1rCWdfzIejawkU1sZgtb2cZ2drCTXexmD3vZx34O8BM/8wsHOcRh
jnCUYxznV05wklOc5jd+5wx/8Cd/cZZz/M0/nOcCF7nEZa5wlWtc5wb/cpNb
3OYOd7nHfR7wkP/4n0c85glPecZzXvCSV7zmDW95RxDhf2IQk1jEJg5xiUd8
QklAQsIIJ4JEJCYJSUlGJFEkJwUpSUVq0pCWdETzHpM6nHY=
           "]], 
          
          LineBox[{3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881,
            3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 
           3893, 3894, 3895, 3896, 3897, 3898, 3899, 3900, 3901, 3902, 3903, 
           3904, 3905}], 
          LineBox[CompressedData["
1:eJwNwwc6kAEAANC/EzhDV0HZGZWdZEf2JhUhe5MQsleZkUoIqVzKe9/37uaU
J5XdCYKgx9CQIAgz3HveN8JIo4w2xljjfGC8CSaa5EMf+dhkU0w1zXQzzPSJ
WT4122fmmGue+RZYaJHPLbbEF5ZaZrkVVlpltTXWWme9DTbaZLMvbfGVr31j
q22+td0OO31nl9322Guf/Q446JDDjjjqmONO+N5JPzjltDN+dNY55/3kgosu
ueyKq6657oabbvnZL26746577nvgVw898pvHfveHPz3xl6eeee5vL7z0yj9e
+9d//vfGWwzEUtU=
           "]], 
          
          LineBox[{4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053,
            4054, 4055, 4056, 4057, 4058, 4059, 4060, 4061, 4062, 4063, 4064, 
           4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 
           4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084}], 
          LineBox[CompressedData["
1:eJwNw4c6lQEAAND/JqUUGkbSuEVTVhIhCQ0p0ibrmqncVKJoESISD+AtS2g4
5/tOOBJtHAgFQbDsz8Qg+OWKv111zXX/+Nd//jdICoKQm4xxs7FucatxbnO7
8e5wpwkmmuQud7vHvSabYqpp7jPd/WZ4wIMe8rBhj3jUTLM85nFPeNJTnjbb
M+aYa575FnjWQs9Z5HmLLfGCpZZZ7kUrvGSll62y2hqveNVrXrfWG9Z501vW
2+BtG73jXe953wc+9JFNNvvYFltts90OI3baZbc99trnE/t96jOfO2DUFw76
0le+dsg3DjviW9856pjv/eBHP/nZcSf84qRTTvvVGWf95pzzfnfBHy665Abv
7UDQ
           "]], 
          LineBox[CompressedData["
1:eJwN02MDFQYAAMCXlm1by7ZtL3Mt27Zt27btWi3btu3afbifcIkbta3cJkgg
EEgXNBCYGCkQmMRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq
1rCWdaxnAxvZxGa2sJVtbGcHO9nFbvawl33s5wAHOcRhjnCUY/zLcU7wHyc5
xWnOcJZznOcCF7nEZa5wlWtc5wY3ucVt7nCXe9znAQ95xGOe8JRnPOcFL3nF
a97wlne85wMf+cRnvvCVb3znBz/5xW8CkQOBIAQlGMEJwR+EJBShCUNYwhGe
CEQkEpGJQlSiEZ0YxCQWsYlDXOIRnwQkJBGJSUJSkpGcFKQkFan5kzSkJR3p
yUBGMpGZLGQlG9nJQU5ykZs85CUf+SlAQQpRmCIUpRjFKUFJSlGaMpSlHOWp
QEUqUZkqVKUaf1GdGtSkFrWpQ13qUZ8GNKQRf9OYf2hCU5rRnBa0pBWtaUNb
2tGeDnSkE53pQle60Z0e9KQXvelDX/rRnwEMZBCDGcJQhjGcEYxkFKMZw1jG
MZ4JTGQSk5nCVKYxnRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtax
ng1sZBOb2cJWtrGdHexkF7vZw172sZ8DHOQQhznCUY7xL8c5wX+c5BSnOcNZ
znGeC1zkEpe5wlWucZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve
8Z4PfOQTn/nCV77xnR/85Be/CUTxn6AEIzgh+IOQhCI0YQhLOMITgYhEIjJR
iEo0ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjV/koa0pCM9GchIJjKT
haxkIzs5yEkucpOHvOQjPwUoSCEKU4SiFKM4JShJKUpThrKUozwVqEglKlOF
qlTjL6pTg5rUojZ1qEs96tOAhjTibxrzD01oSjOa04KWtKI1bWhLO9rTgY50
ojNd6Eo3utODnvSiN33oSz/6M4CBDGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxi
MlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GNbGIz
W9jKNrazg53sYjd72Mv/6VFD9w==
           "]], 
          
          LineBox[{4800, 4801, 4802, 4803, 4804, 4805, 4806, 4807, 4808, 4809,
            4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 
           4821, 4822, 4823, 4824, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 
           4832, 4833, 4834, 4835, 4836, 4837, 4838, 4839, 4840, 4841, 4842, 
           4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 
           4854, 4855, 4856}], 
          
          LineBox[{4857, 4858, 4859, 4860, 4861, 4862, 4863, 4864, 4865, 4866,
            4867, 4868, 4869, 4870, 4871, 4872, 4873, 4874, 4875, 4876, 4877, 
           4878, 4879, 4880, 4881, 4882, 4883, 4884, 4885, 4886, 4887, 4888, 
           4889, 4890}], 
          
          LineBox[{4891, 4892, 4893, 4894, 4895, 4896, 4897, 4898, 4899, 4900,
            4901, 4902, 4903, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 
           4912, 4913, 4914, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 
           4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 
           4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942, 4943, 4944, 
           4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 
           4956, 4957, 4958, 4959, 4960}], 
          
          LineBox[{4961, 4962, 4963, 4964, 4965, 4966, 4967, 4968, 4969, 4970,
            4971, 4972, 4973, 4974, 4975, 4976, 4977, 4978, 4979, 4980, 4981, 
           4982, 4983, 4984, 4985, 4986, 4987, 4988, 4989, 4990, 4991, 4992, 
           4993, 4994, 4995, 4996, 4997, 4998, 4999, 5000, 5001, 5002, 5003, 
           5004, 5005, 5006}], 
          
          LineBox[{5007, 5008, 5009, 5010, 5011, 5012, 5013, 5014, 5015, 5016,
            5017, 5018, 5019, 5020, 5021, 5022, 5023, 5024, 5025, 5026, 5027, 
           5028, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 
           5039}], 
          LineBox[CompressedData["
1:eJwNw2dbjQEAAND3yqiU6F7ZdCspI2SUqDQpuyL0rR+gP+aDkVFEsklCVlaI
UmYyyzjneU60sanmUCgIgsMeCQfBUY953GZPeNJTnrbFVs941jbPed52L9jh
RS952Ste9ZrXveFNO71ll7ft9o53vWeP933gQx/52F6f+NRnPveFfb70la/t
941vHXDQdw457Hs/+NFPfvaLI3511G9+94c//eVvxxz3j3/9ZxAJgpATjHGi
k5zsFGONM96pJpjoNJOc7gyTDRtxpinOcrZznOs857vAhS4y1ahpppvhYjNd
YpbZLnWZy11hjitd5WpzXeNa17nePPPdYIEb3WShRRa72RJLLbPcCivd4lar
rHab293hTne52z3WWGude91nvfs94EEb/A+0kWMy
           "]], 
          LineBox[CompressedData["
1:eJwNw+c6lgEAANDXPXQDbqnfTRIJHyJkrzIiX4mknVn2imySiiSSUCllJBfh
nOc5kVGhk0kRQRCEPXUiCE57xrOe87xRRnvBGC8aa5yXjPeyCSaaZMhkU0z1
immme9UMM83ymtnmmGue+RZYaJHFlljqdW9YZrkVVnrTKqu9ZY1hb3vHWu9a
Z733bPC+jT7woY987BOf+sznNtlsi6222e4LX9php11222OvffY74KBDvnLY
EV876pjjTjjplNPOOOsb53zrvO987wcXXPSjS35y2c+uuOoX1/zqut/ccNMt
v/vDn277y9/u+Me/7rrnvgf+89D/HnkMkklqfQ==
           "]], 
          LineBox[CompressedData["
1:eJwN0+eDyAUAgOEf7hzOOjc4+84ZZxzujEpLiGSTVTbJXg2UKGRnhYoyG0ZW
0bD3lkoZZY8Ux529eT4873/wxnXs06R3hiAI6khqVBBc5gpppHOVa1znBje5
xW3ucJd73OcBD3lEEB0EGchIJkIIJTNhZCEr2QgnOznISS5yE0EeIokimhjy
ko9Y8lOAghSiMEUoShzxFCOB4pSgJKVIpDRlKEs5kihPBSqSTAqVqEwVqvIE
T/IU1XiaZ3iW53ie6rxADWpSixepTR1eoi4vU4/6NKAhjWhME5rSjFdoTgta
0orWvMprtKEt7WhPBzrSic504XW68gbd6E4PetKL3vShL/3ozwDe5C3e5h0G
MojBvMt7DOF9hjKMD/iQ4YxgJB8xitGMYSzjGM8EPmYik5jMFKbyCdOYzgw+
5TM+Zyaz+IIvmc0c5jKP+SzgK77mG75lIYtYzBK+YynLWM4KVvI9P7CK1fzI
T/zML6xhLetYzwY2sonNbGEr29jODnayi93sYS/72M+vHOA3fucPDvInf3GI
wxzhKH/zD8c4zglOcorTnOEs5zjPv1zgP/7nIpdI5TJXSCOdq1zjOje4yS1u
c4e73OM+D3jII4IY/5ORTIQQSmbCyEJWshFOdnKQk1zkJoI8RBJFNDHkJR+x
5KcABSlEYYpQlDjiKUYCxSlBSUqRSGnKUJZyJFGeClQkmRQq8Rjes7Qr
           "]], 
          LineBox[CompressedData["
1:eJwNw+c2kAEAANCvl+i/h0gq2kMpIaFBqIyEInu3S0gDiUqiIqNCIVGSlhF6
n+4954ak58flrQuCoMsN64Mg1I2GucnNbjHcCLe6ze3ucKe73O0e97rPSPd7
wCgPeshoDxtjrHEeMd6jJphoksc87glPmmyKp0w1zXRPe8azZphpltmeM8fz
5ppnvhe8aIGFXrLIYksstcxyK6y0ymprrLXOy17xqte87g1vesvb1nvHBhtt
8q7N3vO+D3xoi622+ch2H9thp0986jO7fG63L+yx15e+8rV99vvGAQcdcti3
vvO9I4465gc/Ou6Ek35yys9OO+MXvzrrN+f87rw//Okvf/vHBRddctm/rrjq
mv/8DxDzY9A=
           "]], 
          LineBox[CompressedData["
1:eJwNw4dajQEAANC/NEgLKUK6EcnIDJVSyGqJomF0KfveItT79EzKpiIjJC2S
Ouf7TigcbYzEBEEw4PPMIBh0yBe+9JWvfeNb3/neDw474qgf/eSYn/3iV785
7nd/+NMJfznpb6ecdsZZ5/zjX+f954L/XTTICoIYY11mnPEmmOhyV5jkSpNN
MdU0013lateY4VozzXKd6812gxvdZI6bzTVknlvcar7b3G6BOyx0p7vc7R6L
3Os+93vAgx6y2MMe8aglllrmMcut8LiVVnnCk56y2tOe8aznPG+NtdZZb4MX
bPSil2yy2ctescVW22z3qte87g07DHvTW3ba5W3veNd73veBD40YtdseH/nY
Xp/41Gf22e8SCsJUOA==
           "]], 
          LineBox[CompressedData["
1:eJwNxGOAHgQAANDvZjU02zXbajav2bbVbNu4m5uarZpt2/ZqrrH3472UTTsF
dwwKBAKp1Sd+INCXfvRnAAMZxGCGMJRhDGcEIxnFaMYwlnGMZwITmcRkpjCV
aUxnBjOZxWxCCGUOc5nHfBawkEX8zmKWsJRlLOcPVrCSVaxmDWtZx3o2sJFN
bGYLW9nGdnbwJ3+xk13sZg972cd+DnCQQxzmCEc5xnFOcJJTnOYMZznHeS5w
kUtc5gpXucZ1bnCTW9zmDne5x30e8JBHPOYJT3nGc17wklf8zT+85g1vecd7
PvCRf/mPT3zmC1/5xncCCQKBIMIQlnCEJwIRiURkohCVaPxAdGIQk1j8SGzi
EJd4xCcBCUlEYpKQlGQkJwUpSUVq0pCWn/iZdKQnAxnJRGaykJVsZCcHOclF
bvKQl3zkpwAFKURhivALRSlGcUpQklKUpgxlKUd5KlCRSlSmClWpRjC/Up0a
1KQWtalDXepRnwY0pBGNaUJTmtGcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70
5Dd60Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nB
TGYxmxBCmcP/FrivGw==
           "]], 
          LineBox[CompressedData["
1:eJwNxGlgDgQAANBvRaIbFVFauTolV+lCKVeHo+jESrlHl25djkIilXKM2YyZ
3bPDNmN2HzZzbXPtKDkq3ffxfrwXHBI6YnpQIBAYpFVtAoHVhLGGtYSzjggi
WU8UG9hINJuIYTOxxBFPAokkkUwKW0gljXQy2EomWWSzjRy2s4NcdpJHPgUU
UkQxJZRSRjm7qKCS3VSxh73sYz8HqKaGWg5yiMMc4Sh11NNAI1/xNcf4huOc
4CSn+Jbv+J7T/MCP/MTP/MKv/Mbv/MGf/MXf/MO//EegbSAQxBmcSROachbN
OJvmtOAczuU8zucCLuQiWtKK1lzMJVxKG9pyGe1oz+VcQQeuJJiruJqOdKIz
XejKNVzLdVzPDdxIN26iOzfTg570ojd9uIVb6ctt3M4d3Mld9KM/A7ibexjI
vdzHIAYzhKEM434e4EEeYjgjGMkoHuYRRjOGR3mMx3mCJ3mKsYxjPCE8zTNM
4FmeYyKTmMwUpjKN6YQyg5k8zwu8yEu8zCxe4VVe43Xe4E3eYjZv8w7v8h7v
M4e5zGM+H/AhC1jIIj5iMR+zhKV8wjI+5TM+Zzlf8CUrWMkqVhPGGtYSzjoi
iGQ9UWxgI9FsIobNxBJHPAkkkkQyKWwhlTTSyWArmWSRzTZy2M4OctlJHvkU
UEgRxZRQShnl7KKCSnZTxR72so/9HKCaGmo5yCEOc4Sj1FFPA438D2xw10Y=

           "]], 
          LineBox[CompressedData["
1:eJwNw4c6lQEAAND/RiWiaUZFNCVUSkgoJFS3TfOaDfdKCaWiB+ntlEKZEQ3n
fN/JjcTC0VAQBJ+dyAyCL3510m9+d8ppZ/zhT2edc94FF13yl8uu+NtV1/zj
X//53yArCEJuMM54N7rJzSa4xUST3GqyKW5zuzvc6S53m2qa6WaYaZZ7zDbH
ve5zv7nmecB8CzzoIQ97xKMes9DjFnnCYkss9aSnPG2ZZzxrueessNIqz1vt
BWustc6LXrLeBhu9bJNXbLbFVq96zeuGveFNb3nbO971nm22e98HPvSRj31i
xA477bLbHnt96jOf+8I+o8bs96UDvvK1g75xyGFHfOs7R33vBz865rifXAcP
Kk0M
           "]], 
          LineBox[{6787, 6788, 6789, 6790, 6791, 6792}], 
          LineBox[{6793, 6794, 6795, 6796, 6797}]}, 
         RowBox[{
           RowBox[{
             FractionBox["k", "kp"], "+", 
             RowBox[{
               RowBox[{"Tan", "[", "k", "]"}], " ", 
               RowBox[{"Tan", "[", "kp", "]"}]}]}], "\[Equal]", "0"}]], 
        Annotation[#, $CellContext`k/$CellContext`kp + 
          Tan[$CellContext`k] Tan[$CellContext`kp] == 0, "Tooltip"]& ]}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> 
     NCache[{{0, 10}, {2^Rational[1, 2], 10 + 2^Rational[1, 2]}}, {{0, 10}, {
        1.4142135623730951`, 11.414213562373096`}}], PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         RowBox[{
           FractionBox["k", "kp"], "-", 
           RowBox[{
             RowBox[{"cot", "(", "k", ")"}], " ", 
             RowBox[{"tan", "(", "kp", ")"}]}]}], "\[LongEqual]", "0"}], 
       RowBox[{
         RowBox[{
           FractionBox["k", "kp"], "+", 
           RowBox[{
             RowBox[{"tan", "(", "k", ")"}], " ", 
             RowBox[{"tan", "(", "kp", ")"}]}]}], "\[LongEqual]", "0"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7455928414476624`*^9, 3.745593030907742*^9, 3.74559311880194*^9, {
   3.7455931510515547`*^9, 3.7455931616988*^9}, 3.745593246697473*^9, 
   3.7455932992392263`*^9, 3.745594450856056*^9, 3.745594490884266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "ylna", ",", "ylpa", ",", "y", ",", "A", ",", "B", ",", "C2", ",", "C4", 
    ",", "x", ",", "k", ",", "kp", ",", "a", ",", "eq1", ",", "eq2", ",", 
    "eq3", ",", "eq4"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ylna", "=", 
   RowBox[{
    RowBox[{"-", "C2"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ylpa", "=", 
   RowBox[{"C4", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{"A", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"kp", " ", "x"}], "]"}]}], "+", 
     RowBox[{"B", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"kp", " ", "x"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq1", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"ylna", "/.", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", "a"}]}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{"y", "/.", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", "a"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq1", "//", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"ylna", ",", "x"}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", "a"}]}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"y", ",", "x"}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", 
       RowBox[{"-", "a"}]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq2", "//", "TraditionalForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq3", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"ylpa", "/.", 
      RowBox[{"x", "\[Rule]", "a"}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{"y", "/.", 
      RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eq3", "//", "TraditionalForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"ylpa", ",", "x"}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "a"}]}], ")"}], "-", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{"y", ",", "x"}], "]"}], "/.", 
      RowBox[{"x", "\[Rule]", "a"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eq4", "//", "TraditionalForm"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eq1", "+", "eq3"}], "\[Equal]", "0"}], ",", "A"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eq1", "-", "eq3"}], "\[Equal]", "0"}], ",", "B"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"eq2", "+", "eq4"}], "\[Equal]", "0"}], ",", "B"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eq2", "-", "eq4"}], "\[Equal]", "0"}], ",", "A"}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Sec", "[", 
      RowBox[{"a", " ", "kp"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"C2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "k"}], "]"}]}], "+", 
       RowBox[{"C4", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}]}], "==", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"C2", " ", "k", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "k"}], "]"}]}], "+", 
         RowBox[{"C4", " ", "k", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{"a", " ", "kp"}], "]"}]}], 
      RowBox[{"2", " ", "kp"}]]}]}], ",", "C2"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Reduce", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", 
        RowBox[{"Csc", "[", 
         RowBox[{"a", " ", "kp"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"C2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"a", " ", "k"}], "]"}]}], "-", 
          RowBox[{"C4", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}]}], ")"}], "/.", 
      RowBox[{"C2", "\[Rule]", 
       RowBox[{"-", "C4"}]}]}], ")"}], "\[Equal]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"C2", " ", "k", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"a", " ", "k"}], "]"}]}], "-", 
            RowBox[{"C4", " ", "k", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}], " ", 
          RowBox[{"Sec", "[", 
           RowBox[{"a", " ", "kp"}], "]"}]}], 
         RowBox[{"2", " ", "kp"}]]}], ")"}], "/.", 
      RowBox[{"C2", "\[Rule]", 
       RowBox[{"-", "C4"}]}]}], ")"}]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.745603196107079*^9, 3.745603205781351*^9}, {
   3.745603238543357*^9, 3.745603302347434*^9}, {3.7456035153743563`*^9, 
   3.745603519229867*^9}, {3.745603553521212*^9, 3.745603601645204*^9}, {
   3.745603771879929*^9, 3.7456038006407347`*^9}, {3.7456038683102417`*^9, 
   3.74560401731866*^9}, {3.745604676073481*^9, 3.7456046777253923`*^9}, {
   3.745605582018775*^9, 3.7456056078874073`*^9}, 3.745605641423998*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{"A", " ", 
     RowBox[{"cos", "(", 
      RowBox[{"a", " ", "kp"}], ")"}]}]}], "+", 
   RowBox[{"B", " ", 
    RowBox[{"sin", "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}], "+", 
   RowBox[{"C2", " ", 
    RowBox[{"sin", "(", 
     RowBox[{"a", " ", "k"}], ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.74560564538377*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{"A", " ", "kp", " ", 
     RowBox[{"sin", "(", 
      RowBox[{"a", " ", "kp"}], ")"}]}]}], "-", 
   RowBox[{"B", " ", "kp", " ", 
    RowBox[{"cos", "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}], "-", 
   RowBox[{"C2", " ", "k", " ", 
    RowBox[{"cos", "(", 
     RowBox[{"a", " ", "k"}], ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.745605645386788*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{"A", " ", 
     RowBox[{"cos", "(", 
      RowBox[{"a", " ", "kp"}], ")"}]}]}], "-", 
   RowBox[{"B", " ", 
    RowBox[{"sin", "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}], "+", 
   RowBox[{"C4", " ", 
    RowBox[{"sin", "(", 
     RowBox[{"a", " ", "k"}], ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.745605645390189*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"A", " ", "kp", " ", 
    RowBox[{"sin", "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}], "-", 
   RowBox[{"B", " ", "kp", " ", 
    RowBox[{"cos", "(", 
     RowBox[{"a", " ", "kp"}], ")"}]}], "+", 
   RowBox[{"C4", " ", "k", " ", 
    RowBox[{"cos", "(", 
     RowBox[{"a", " ", "k"}], ")"}]}]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.7456056453935966`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A", "\[Rule]", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"Sec", "[", 
      RowBox[{"a", " ", "kp"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"C2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "k"}], "]"}]}], "+", 
       RowBox[{"C4", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.745605645397278*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"B", "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     RowBox[{"Csc", "[", 
      RowBox[{"a", " ", "kp"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"C2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "k"}], "]"}]}], "-", 
       RowBox[{"C4", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.745605645400691*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"B", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"C2", " ", "k", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "k"}], "]"}]}], "-", 
         RowBox[{"C4", " ", "k", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}], " ", 
       RowBox[{"Sec", "[", 
        RowBox[{"a", " ", "kp"}], "]"}]}], 
      RowBox[{"2", " ", "kp"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.745605645404516*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"C2", " ", "k", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "k"}], "]"}]}], "+", 
         RowBox[{"C4", " ", "k", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}], " ", 
       RowBox[{"Csc", "[", 
        RowBox[{"a", " ", "kp"}], "]"}]}], 
      RowBox[{"2", " ", "kp"}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.745605645407708*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"C2", "\[Rule]", 
    RowBox[{"-", "C4"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.745605645411425*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Reduce", "::", "nsmet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"This system cannot be solved with the methods available to \
Reduce. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Reduce\\\", ButtonNote -> \
\\\"Reduce::nsmet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.745604689415073*^9, 3.7456056162644873`*^9, 
  3.745605650137072*^9}],

Cell[BoxData[
 RowBox[{"Reduce", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"C4", " ", 
     RowBox[{"Csc", "[", 
      RowBox[{"a", " ", "kp"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"a", " ", "k"}], "]"}]}], "\[Equal]", 
    FractionBox[
     RowBox[{"C4", " ", "k", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"a", " ", "k"}], "]"}], " ", 
      RowBox[{"Sec", "[", 
       RowBox[{"a", " ", "kp"}], "]"}]}], "kp"]}], "}"}], "]"}]], "Output",
 CellChangeTimes->{
  3.745603406305066*^9, 3.7456035200777283`*^9, 3.7456036044179153`*^9, 
   3.7456039035539722`*^9, {3.745604010584968*^9, 3.745604018649103*^9}, 
   3.745604684932673*^9, 3.745605611433859*^9, 3.7456056501512527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Lambda]", ",", "V0", ",", "k", ",", "kp", ",", "a", ",", "f1", ",", 
    "f2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0", "=", "2"}], ";", 
  RowBox[{"a", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   SqrtBox["\[Lambda]"]}], ";", 
  RowBox[{"kp", "=", 
   SqrtBox[
    RowBox[{"V0", "+", "\[Lambda]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f1", "=", 
   RowBox[{
    FractionBox["k", "kp"], "-", 
    FractionBox[
     RowBox[{"Tan", "[", 
      RowBox[{"k", " ", "a"}], "]"}], 
     RowBox[{"Tan", "[", 
      RowBox[{"kp", " ", "a"}], "]"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Tan", "[", 
      RowBox[{"kp", " ", "a"}], "]"}], " ", 
     RowBox[{"Tan", "[", 
      RowBox[{"k", " ", "a"}], "]"}]}], "+", 
    FractionBox["k", "kp"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", "f2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "30"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   RowBox[{"Csc", "[", 
    RowBox[{"a", " ", "kp"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"C2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"a", " ", "k"}], "]"}]}], "-", 
     RowBox[{"C4", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}]}], "/.", 
  RowBox[{"C2", "\[Rule]", 
   RowBox[{"-", "C4"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"C2", " ", "k", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", " ", "k"}], "]"}]}], "-", 
       RowBox[{"C4", " ", "k", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"a", " ", "k"}], "]"}]}]}], ")"}], " ", 
     RowBox[{"Sec", "[", 
      RowBox[{"a", " ", "kp"}], "]"}]}], 
    RowBox[{"2", " ", "kp"}]]}], "/.", 
  RowBox[{"C2", "\[Rule]", 
   RowBox[{"-", "C4"}]}]}]}], "Input",
 CellChangeTimes->{{3.74560618633416*^9, 3.745606351575025*^9}, {
   3.745606414348016*^9, 3.745606518359632*^9}, 3.7456066603417*^9, {
   3.745606696723504*^9, 3.745606757306211*^9}, {3.745606812283194*^9, 
   3.745606824467238*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[CompressedData["
1:eJw1WHk81N33H9uMsYwxq2EGWVosJQmROkSJLGUJ0UKeKJWnhAghsvVElixF
llRCkqWNe0u0aROPsqSQlNLm0cfYfvP94/fXfb1f59x7z73v932dc+4C34Nb
/MVJJBJfjET63xiumzxR5i4FRhxd7o7PmlhAfpvT9JcUmPjKu8oaaGKZJtoN
cqQUuG2o2deyTQP/OWz9wum0FJR9b4SZvAV4WCdiLLdUCv4+nmzkP6qOm3M/
auq2S0E6NzI931sNX3VSgZD3UsBb0BUUa6OKc8mbvZsmpKBCwJLaYyXACU2J
4WQqGWA/JXbVZj4+FHI3y0lAhmt3S+7qB6vgHbq/anKXk6Fy3ZZ3N84r402D
i559sCFDEy1F8cAbHtZ2zpQKOUCGrc4fbbuClTCD8nhBUxwZ7vzJGo1r5+K5
pjkL8lkyDJ754Oq9nIvf6O4NzUVk+P62gFXF5ODWwaIzH16T4ezTQtMPp9m4
Nq+rWmeUDCRflnQDg43TKJaf7tIpEEUfmvLWYeGjzaESZG0KqD29PenRzMR/
HalUc1pFgXU1h1rWb2XitUNcjw+7KFB9pay5KoeB9fIdQnRCKSBuzw7LXM3A
Spvj0w+nUIBR5H/OakQR/2oefyR1gwL6Da0NLGtFPHBE66PjQwq80jbqfv6H
jtv1vMRyeykQnVrUE1NNx+X5rat0JKWh9v4TgaoWHXuGnqtwdJOGYLtPxeUe
NKy+pNTYIkAartDUNnSNy+OR3iv3dSOlweTluKFPkjw+ZNnYI10sDV87dG/2
P5DDKXIdMi1fpUGZKPMe2CGLndGbnOvz0hC9eHyrhLws5hwa0LjAoIJe8hXX
mLsyuLT7q1mUKRWI7v5sVQ0ZfLeEss/kBBXeqQcdyJei4jg32h/ts1RwOnxr
G6tFGttKs+NZFVSQhBRkFSeNu/ZrFPx8QYUJvZQTUVLSeNzU4ulVFRmImeo4
+kZAwXVj67bmL5WB5N6KBJ9PZBxRaDeUZCkDI4+NFunUkjFZ0mPaf48MJGQm
fj5gT8ZqLw7pqt+Qgctz0b4ZqVJ4JPZoI61NBoJikYfZdilcaXR83ewbGUgZ
iS0ZWC6FTfNPbeuZkwF2r3I1qU8SO/tfTs2ykwUzKYfubjNJzFG6xo33kYXn
4YTROZYk7ntSX/p3sCwscctevei7BA40aLnjmCMLOzx6lkSWS+C46f4x6UFZ
OGTnOJIikMC21cNhfyZk4dimJL/fM+KYtmtMYoQiB5WBUtbTfeK4oI1QadGX
g46cwXtvCsVxXQZzU9RROWDRLibtWCKOPy7aWPmTLg+lIYlBV9zF8C+3hukj
2vKwMibuotdqMUw6oWkvXCUPIXu/EMkaYpj/fvazuJ88GNqZP3L/QcKuubWL
WPXyED2/P9ozg4R929TCch/Lw9z7y2ZXI0g4eCKtjf9OHjaZrzH2303Cqc57
/LUpNPCMOJcrvYqE70vzS409aVBzMSC56Nk8emmc/Ov2fhoszPZxti+fR+92
T1qujaNBVsRk98WYeTSFX77fcJUGB3UsSzyM5pHB0QRVz1kaLD476el2cQ4V
fh7PiyxWAJqLgDlTMosqud6f5+sVoIavG8lMmEW3bR6bnniiAJHHLW0q9syi
ruLS7rTfCkDke73dtHQWkfUrZV5o0GGnRYfXknszSP6Br6GiPh1mQr/Wz5XP
INY2npeLCR0cac1XrU7NII3kxCvd9nToPCqUVtg2g9Z83Gn7PoQOt+uKcpKm
p5HNMW6wRgwd3CuDwouHp9Em5vOzu5PpsCXs5F8qz6eRl6X5p9HzdNjoeiZI
r2QaHTnPTvzZRofXe9+6FThOo0q3Jy3iPEWg05vupzQKUd98JZmtqQjbVgjM
dpcLkXzF6Y2L9BXh5yfd8ZPZQnRgzvWFvaUihFzfZ1URIkTLLw30ZAUqQnLB
RTdLYyHy3XxfcOmwIiS2Pbd0WSREZ6bLdt6KUoT9U5w9l5WEaMJp70h/hiLU
9PxnwZuZQg3ExM+FtxVhc1iBHaltCo2UdButeqAI/u0bZbi3phDX4XaY/XNF
0PWaMN9XOYXCi2NmDw4qwsPCEL/HmVPI3E6GekuGAXapghJ7/ymEC9TU7bcx
QEu2t/cLYwr9sBH38/FnwJNftT6Z1Cm04MfwxYMHGVDUOlMdTJpCcdYVulnx
DHh015j6aJxANt+MTPqvMoCfTbF494xAoWe5Ed/rGWD8amXbgjYClVsK74ph
BvSPM4U5zQSSzkFWCzsZEFK4RJxdQ6Ana+wcD84wwMpQEOueTSDhqF5GLJkJ
6dkTZqqnCaSbqdCZSWcC62GpGjuZQGmfOj1vajGhHq1xPx1FoLsZjeeeLGXC
Ii5PixFOoG/m+QN9pkz4pp3HajlEIMf0Hf5iDkzY57d5f3UAgaLNrC4ztzLB
9MFN31E/Al0b1hrT3sWELXrcbKcdBKKv+hJsd0SENXs+lLkTyHKo/YZ3DBPq
pPvzzmwh0KFT1yYPJDMBTkg/qXQk0OsPIccyzzNhp2H/kP8GAv2gQhhRzgQH
s1PWFtYEohnKHvKpYULWhq+PzCwJZBtXvGdRCxMMPXrbLpkT6K+KIN+0diY8
OEilclcRKL7DxOdnFxPCNwhIlcYEatZ4vuXOKBO2kbOr1hsSqNcuz0H9FxNG
DO6YbDIgEHFot23CNBOS1m1QDVtKIE7BsnVfJFnwsyje8aEegVa0CC2caCxI
DWM1rtYlkPNYq2kdlwUP5Cc3dC8h0AFmxgreAhaY8SJ/5SwmUKq599JoHRZ0
WttfiVxEoMt+i5YMrWDBmRe7diYsJFBr6i9NWwsWbLeXk6/TJtDgjSbVqvUs
UI/4fJEiwqS+JB7DmQXExlGN41oEEki6ssI8WVAxvj5KIMJmemoKfb4s+Mg7
c21Ak0Aerl+olkEsGHEuq28T4SPH6iXLj7Bgx86LaR0ifKbs+LxMjCi+b9QV
EqL519rthQeTWKCilXnZQ4TbJzj/dWawQDLBcbxDhL/wB7+vKmBBxLNs8iFR
PBSbqi+FZSyomaf9t1IUv9b+8I8S1SyQO1nZrCo6n1X2uvcBjSyYPFoVqCc6
/44mWu8zzILcqfOz20X3c+zj2y7DJyw4Xr01vkGHQHnyF1+efc2CjX7iUitE
99uwMvjpTB8Lgu6y/unUJ1Cnj3nbrhEW2NLcdAuWEehnAvle23cWNDn3fElc
LtJD9as7ulMsqDKQ7zu7gkB6/55rSBdnw5u1VxSerxTpYeGKSi82G0YLr5+s
MBPpwXGuHKmK7INrJ5wtCHQh9HGx1mI2CA9H/+aDSA9tO86Om4nsnCXUhetF
ehjXOeNizYYvHWlb/DaK9MCdTLvpwAaaX1ZW2yYR/3vS4uJ2iuzvr4XNuxBo
/+mtUZ8C2UDf2enetZVAKY0a4ZsOsyFdoaXi1TYR35Rb+zmJbMBi91av2S3i
e9mJgMjTbMjwc3jwv/dE8nDye5/LBuO4Mpf1+0X8Xv7oUXGVDe9mO/XGQkX8
vqxxUahng+HczFMiUsQvEekY0syG6CNZgqWxBKqxZVivecWGf3BoJj2NQNqf
1yzrmBT51xdY3i4l0Ihjk6y4GAcKrSq1sitEeqwzH10uy4G9ufplF64TSOe4
aXGGGgcaYlsq7DCBlnINmZttORAxK7zze4BA34/VfD++hQPTNg4e3qOi/QaX
ttd4cwCd7zIifhDIsFo3gf43B44Npxo8FZ9Cxjbaf17kcWA4Q8zj8+Ip9Kei
9PV8KQfy9sVS/xhOoZt0jZpl1RyIDv603txiCpn1qQaevs+BZjW2VeCWKbT2
sFKv4xgH6nIafwTETCHbYln0bDUXBue87hwcnkJUSkrB7HouTJiWtGn9mkJP
gqTD9TdzwS7fyY1HEqJNplLLT/lzYbzXtamFL0SbX8yVbPpH5F/1amy5pxAx
VkbFHMvlQrUzTedPgBB15k9vqyzhgvAADIgdFSL3vwiWXCMXNl5wERvLEyKv
2Z+JTwe40FUXkaQ1IEQqfsF+05+5QEs3uaf/U5S/Ho2v1Z3ggtV2zwvxEtNo
e9YYkSKtBKqxZDfekmnkq/txr91yJXC/f0BeJnwa7fN84/g4Tgm+Wty/I75w
BilZrB2yT1OCvVX3A9vNZ1CbennY82wlCDl4NeXzZlE+Hj184fVlJRjMdPqm
ETODekIVfvU/V4Lg7E7r+v4ZlOQVmrjzjRKcnQ7YazE5g4zX9CsPfVACZtAt
N02FWZQhdXXd6IQSeD/+vJZmNYtss9Zn/1Lmgfj36KsplbNoMqxqyREtHlhP
2NN0H82ism2s5j/6PIgeKataOTyL5jUGR2aAB8+Hdp5LF8yhhutRppQ9PDB2
SUpLz55DWi/qelVu8OCkTaLhsXPzqKNWJbjwLg+C3RfOVKB5dDwnTnJBGw8c
Wm3q/IfmUa+Ps/7CtzzQfZVdb80h4TNfx6IN5nkQeEujZsyXhOHlFuYNaWWg
l07ZvQ0l4fEbty6tZCjDq0+ftiilkvDGyJMvzbSV4Wayv35GHQmTZDQ1bOyV
YYWOmX2hrBiu/pbc8NBVGXxo+yw3iOo771c/7Oy2K0N+9offTqvEcGNu82Gn
v5XhAceiKSlADB9Y5NXqeVYZAnRO1HU+FcN91hkBB4aUYextfzBxSVRfmmsp
3fuqDDpxLzert4rjVMPGh8xJZbisY9D2dFAcm6n3L7wlrQIGiztZt9UkcO70
4o8SS1Wg9ZoZ2eWCBA7+dSfL3UQF6oYjcv67J4E3fHa0vgIqMNjVLWE6LIEn
/w0pdXRRgbA9YxJVOpLYtRbvygsX9XxBZT9eI0msd8VF8WusCjjrJnb/GJHE
EhdG8JpUFWDuYfV20KRw7Sk59eHzKuBa99ZyZqcUpgd6vFvaIlr/6MTPFAUy
Ht0xdiq2XQUCcWX3EQsyRu7RFp1dKpDiMD64NYiMD1iXnTs6qgKd5PLdas/I
uF3th9cDeT58Tsl/VVRAwWWceBkulw+ZeDXW7qDgSHnO7UB1PnitO1X4iSqN
dabNeQor+JDTdGrONkoaJ/17stvTgw9HPiZ43w+h4p3PlE9W7uID616pjH8D
FZs8qDKe38uH/BdzPWVTVDxy/XV2WRQf9uxKpZgmyGDrU2qu30v4EP/Sr/VY
rSzmn6iVsKrkg57GzV2d4nL4d4TNjax6PmTf/y251U0OlwTsY5g94sPukTCq
iZg8jtgxdy/tFR8UysM3P/CSx5vdM/4e6OFDuUxoXl+DPCZZN7488Y0P7kPY
XxBGw2/M7I53T/Kh9/2L07G9NHxtef8yHZIASm5LWI1aKeDtahKnXzAEENWR
cbRMno7vCB0dlE0FsLvy0jOXaTo2Xpb9zsRKAFWupxdbWyriWr/eg26bBIAf
x+g8TFbEl9v3nEnfKYCk9oB/eJoMrCVWrVm9VwCvvYuszEIYuGjlRN3TEAFw
l1e8TH/EwDmFx7vJyQJ45ePafimSiRVftwVoZQpgfmXwo397mKJ+Wl5oeV4A
0Q9I53lrWDg+OI8fdV0Azo03ur8rsvFc2UBV/h0B0I2qDwri2Tjirfbam60C
SMwsa8yaYuNgq9pdv98KYMLsT86XPxwsyjG/6MMCON+W/W/5cS7+6+qaE0vH
BXCaOnF2L10J+7CelgeKq0JkZNcKhw08/MZW0fSknCq8ZmeHNXznYdeorY/L
OKrguyOuCBcrY7uRobEBHVWQutDZZ7iQj1uVdaJmjVTBCAw6zgv5GJyCaSpr
VWHLH67jzT4BvhvfUGS6URWuPTROfvdMFZvcnDFwd1GFVGrV0XMv1HDtV6v7
h31UwSp0ULv3b3W8dEGyS8YeVcipu+XNIy/AWins0PZIVTi0vsJAaosGLmre
RvmSoArm5zMXFMtpYuXfxbmUdFVoa5ox3dWtiZf35W/tEeH//6/5P1kNWl8=

        "]], 
       LineBox[CompressedData["
1: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
Cur+///Z/wMDb68E
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[{{22.211183801416674`, 12.557877217510374`}, {
        22.211368028753622`, -9.95580360794984}}], 
       LineBox[{{2.476807542846989, 12.557877217510374`}, {
        2.4768352435232663`, -9.95580360794984}}], 
       LineBox[{{7.875926711714024, -9.95580360794984}, {7.876072303276959, 
        12.557877217510374`}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBAQL+/SFib1JlAgAAAB8AAAACAAAA9t7JxCSLpD7FKz/FHpF2P/lDMWxB
2II/LTu2H7AW5j9luudVGNiSP2olk0kJ8O8/ztK29Q9EnD8UnWl8QQH0P5v1
wsoD2KI/DFI6iI2j9z/Qgaqa/42nP7ncbh4hD/s/BA6SavtDrD/XPxUnGl3+
PzaTMIX517I/uDMpfZpsAkBQWSRt9zK1Py4Hl4kADQRAah8YVfWNtz/r6gzb
5rIFQJ+r/yTxQ7w/xiIrdyYaCUC6cfMM756+P6t7B8N04ApA6ptzevZ8wD/v
7rxHZbYMQARiZ2L018I/7gaPwnJNEEARRWFWcwXEP7JdBlFNVxFAHihbSvIy
xT+hTEdDLG4SQCsLVT5xYMY/1Azh7JyTE0A47k4y8I3HP/obZ0ZVyRRARdFI
Jm+7yD+KMP+3PBEWQFK0Qhru6Mk/hS3VSXZtF0BtejYC7EPMP5aiQsvgbBpA
el0w9mpxzT/uD69A+xUcQIhAKurpns4/M3XUPmLfHUCVIyTeaMzPPzTmEohU
zR9AUQMP6fN80D8iAQzCZfIgQNj0C2OzE9E/CFlcS9MVIkBe5gjdcqrRP8gA
u3BxVCNA5NcFVzJB0j90D9frcbIkQGvJAtHx19I/y/JJduk0JkDyuv9KsW7T
P+d4zbkP4idAWi8lD+bR0z/0xygVoh0pQPnx43g=
        "]], 
       LineBox[CompressedData["
1:eJw9lGlQk3cQxqMIdWSwHgUUJPzfhHiAIlBAi8qCZQBLCYiaVg2IAoqoRbSV
BisyHEq1oCKIhqOAiRySWsFKaDWug6NGnCTQSqWCR6oIWBLIBTmEpl/6YWfn
N7Ozs89e1K70uJTpNBqNbbX/fHpjBaMJ/wF/Jy/nHUNM5HwS/0w6ewQ2VKji
8kVMXP2jXpiTOALXXrbce3aYiS62xQdXtYwAJ2nX86B1TOxXSGyFW1Rww+YE
m/uUgZLALxTb61VwVtbmKGtkYE2lmj/PqILUIGWj8BgDk1OJT06lGiZCLCV2
yxkYLhObAlVqOL/tyzCOHQM/4jcoDe6jUE1bOvOikkLDVIhIlDEKPCcRvayG
wrd+RfO+548CvUIZvziXwqcpvZnJHaPQfo8DW1IobO/MWO/qOAYP03SnInwo
bJq8XW9YZ+XnUuk7Zwr5vrMcunePwVHLNg81jcLTyZxDojNjEEVm1Ya9I/hd
ed2fheIx2GHr4P2yh+CBR6q1ya/GAH+rPnuzg2DC+6A6mKWBfvXdLbevEwxJ
+n2/YbsGzKwhRcA5gr4X3Lu78jVQbTg690IuQYZ03yqRSANTDcpWm28Izre0
VRb2aCDOV3k4M5XgjJUzpidPaaCxuLpkmEtQvzN2DyzVQt1Am4wTR3CgtPKx
y0YtDLEWxt+MJNjzYNDXwNPCnf2pSpsQgg9M/uVddVpYFmp/IGg1wTQWs2/8
oRYGxNlpHb4EZ8fOpehqLQi9q7znLCfYkjWVEuaog00l7mVuSwhyhCNNaWt0
4Ndvd2uQQdAkf6Y+u1MH9LJhWro7wSqT1L/tpA4E/XmTokVWvSwxr1+kg732
GacuuxB8HXNFYvOHDvKdvFujFxIszCq18TTpILg+WNK0gKCXMDcyluiBKz+x
uN3KMvnBoiPhevhZIednWuMPmRK6K/frIZt/xPLams+JFe3cUaKH3qHQBJob
wfaYNdwhsR5+CUywkVrr4WYtq/3whR6iFccSgpkEaULngQBbAzTcdZ2baNUj
kNt6cb0MkBvxcniFVW+ESZueu9HKXayhems/hj2UNxoyDdDZWhUoW0WwOEZh
lFUZgN4736s2mKBfliRY32GAbFVsFBVO8ImgOc912ABfNbhsiGETXGQqdEgN
HIfdzd4nxIkE0SMzrpg7DktfXbI3pBFMikkpv5E7DlkhQvMb67ybBKHUNPk4
xIdvvvJ3EUG2fOXuJfpx+PpSp5ueT3DM6HY12nUCNAWbj2IDwdUxJn/+ngn4
YO31/OL7BPt4gzwsmoCwREXOBes+Hhf0SAZaJ6Bv+Ihd0luC940tkR/TjBDg
L2nm2FOY5lFbtHWxEY7P2PQin06hQ8yZ7uOfG+FkTXZHgR+FmwX7uI8vGiEn
ypM3J57CCdnWWo3ECJOb6DsvH6awwhgxsOCNEbjRsStcT1OoZHscTPE1wbTS
R49ltyjMMPblTUpN4Gmp/WvEy3qvHp0PPUZNUHAtuSH6MwaK2e0OUU5m8Hnu
OPP+XgbSBGXl5bvM0PRrfS/VzECBLK/vdqEZuOINns5yBkYYM6jXP5mhvafm
aaSWgcVs9lUfsxlyWOcGTwET/XhrRzmUBe6Ifii/voeJTy57BhyLsMD6A9/G
hZ5j4iKj3R3peQtw1336Xj7IxC7/PvugUsv//+xfiih34w==
        "]], 
       LineBox[CompressedData["
1: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
Z7w0/v9/4/8BLa+s1A==
        "]], 
       LineBox[CompressedData["
1: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
5pGM
        "]], 
       LineBox[{{22.211291113551273`, -9.95580360794984}, {22.21129928975217, 
        12.557877217510374`}}], 
       LineBox[{{0.4618075713802835, 12.557877217510374`}, {
        0.46192702671623503`, -9.95580360794984}}], 
       LineBox[{{2.4768197800929412`, -9.95580360794984}, {2.476829861599205, 
        12.557877217510374`}}], 
       LineBox[{{20.21627401688992, 12.557877217510374`}, {
        20.216274540299636`, -9.95580360794984}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 30}, {-9.95580360794984, 12.557877217510374`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"f1", "f2"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.745606311725828*^9, 3.7456063825451603`*^9, {3.745606416562914*^9, 
   3.745606519096271*^9}, 3.74560676394951*^9, 3.74560682578489*^9}],

Cell[BoxData[
 RowBox[{"C4", " ", 
  RowBox[{"Csc", "[", 
   SqrtBox[
    RowBox[{"2", "+", "\[Lambda]"}]], "]"}], " ", 
  RowBox[{"Sin", "[", 
   SqrtBox["\[Lambda]"], "]"}]}]], "Output",
 CellChangeTimes->{
  3.745606311725828*^9, 3.7456063825451603`*^9, {3.745606416562914*^9, 
   3.745606519096271*^9}, 3.74560676394951*^9, 3.745606825801783*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"C4", " ", 
   SqrtBox["\[Lambda]"], " ", 
   RowBox[{"Cos", "[", 
    SqrtBox["\[Lambda]"], "]"}], " ", 
   RowBox[{"Sec", "[", 
    SqrtBox[
     RowBox[{"2", "+", "\[Lambda]"}]], "]"}]}], 
  SqrtBox[
   RowBox[{"2", "+", "\[Lambda]"}]]]], "Output",
 CellChangeTimes->{
  3.745606311725828*^9, 3.7456063825451603`*^9, {3.745606416562914*^9, 
   3.745606519096271*^9}, 3.74560676394951*^9, 3.745606825804449*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Eta]", ",", "k", ",", "x", ",", "L", ",", "ylpa", ",", "y", ",", "a", 
    ",", "f1", ",", "f2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ylpa", "=", 
   RowBox[{"B", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{"L", "-", "x"}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Cos", "[", 
    RowBox[{"\[Eta]", " ", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f1", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"ylpa", ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", "a"}]}], 
   RowBox[{"ylpa", "/.", 
    RowBox[{"x", "\[Rule]", "a"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"f2", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"y", ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", "a"}]}], 
   RowBox[{"y", "/.", 
    RowBox[{"x", "\[Rule]", "a"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0", "=", "2"}], ";", 
  RowBox[{"a", "=", "1"}], ";", 
  RowBox[{"L", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   SqrtBox["\[Lambda]"]}], ";", 
  RowBox[{"\[Eta]", "=", 
   SqrtBox[
    RowBox[{"V0", "+", "\[Lambda]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", "f2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7456148428019867`*^9, 3.7456150719270983`*^9}, {
   3.745615344123455*^9, 3.7456153768505793`*^9}, {3.745615438272764*^9, 
   3.74561552771189*^9}, {3.7456156157116013`*^9, 3.745615646952256*^9}, {
   3.7456158201577187`*^9, 3.745615851420882*^9}, {3.7456158899727097`*^9, 
   3.7456159061040382`*^9}, {3.7456163227719297`*^9, 3.7456163954263268`*^9}, 
   3.7456168709547663`*^9, {3.7456174972947903`*^9, 3.745617547106894*^9}, {
   3.7456176006897984`*^9, 3.7456176092222137`*^9}, 3.745617639650528*^9, {
   3.7456176770267057`*^9, 3.745617694487628*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "k"}], " ", 
  RowBox[{"Cot", "[", 
   RowBox[{"k", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "+", "L"}], ")"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.745615072788713*^9, 3.745615528337928*^9, {3.745615619716899*^9, 
   3.7456156474564238`*^9}, 3.745615821685712*^9, 3.745615852011064*^9, {
   3.74561589134065*^9, 3.7456159067746973`*^9}, {3.74561633601224*^9, 
   3.745616395885029*^9}, 3.745616882124918*^9, {3.745617498852504*^9, 
   3.745617547533369*^9}, {3.745617603023901*^9, 3.745617609603416*^9}, 
   3.7456176402711067`*^9, {3.745617679391149*^9, 3.7456176950739927`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "\[Eta]"}], " ", 
  RowBox[{"Tan", "[", 
   RowBox[{"a", " ", "\[Eta]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.745615072788713*^9, 3.745615528337928*^9, {3.745615619716899*^9, 
   3.7456156474564238`*^9}, 3.745615821685712*^9, 3.745615852011064*^9, {
   3.74561589134065*^9, 3.7456159067746973`*^9}, {3.74561633601224*^9, 
   3.745616395885029*^9}, 3.745616882124918*^9, {3.745617498852504*^9, 
   3.745617547533369*^9}, {3.745617603023901*^9, 3.745617609603416*^9}, 
   3.7456176402711067`*^9, {3.745617679391149*^9, 3.7456176950781*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBsQNO/CFib1JlAgAAADoAAAACAAAAnX5iBjFkez5vZqj5wXG8v55a7DpX
IFk/ylj5I7xBu7/ZTYpyICBpP0AH406JDLq/d0dZDgUgeT8CBv5c1pG3v0bE
QFz3H4k/B5344jVVsr9ozIWR9EOMP0mytbbR9bC/i9TKxvFnjz+v45tnzR6v
v2hyqhj215I/37cDlpZYqb+tgjSD8B+ZP6yZCPx4Dpq/vgbXHe+xmj+XCwIT
8IqTv9CKebjtQ5w/KCQ3qEy/ib/ykr7t6mefPxTz1alWvU4/nFEkrPLXoj/b
UdXj4dqeP6STdfnxoKM/ltEbP85soz+t1cZG8WmkPyzIc+3Giac/vllp4e/7
pT/V4pZKoRGwP+FhrhbtH6k/bgIWvaiFuT/qo/9j7OipP4a2FYvmFrw/8uVQ
seuxqj+Pxp+8vL++PwRq80vqQ6w/QOl0tksvwj8MrESZ6QytP9or/lIXrMM/
Fe6V5ujVrT+hF8h+RjjFPyZyOIHnZ68/944a1GuDyD8Y2kRncxiwPywKHLz8
RMo/HHvtDfN8sD9jxYrdLhvMPyS9PlvyRbE/uhtEqi4G0D8oXucBcqqxP/3V
8namFdE/Lf+PqPEOsj8vbqDKaTPSPzZB4fXw17I/2Uh7rzqf1D864omccDyz
P8YWko1t8NU/PoMyQ/Cgsz/iHpn0RVbXP0Ik2+lvBbQ/slKShe3S2D9HxYOQ
72m0P6gkSXzeaNo/TGYsN2/OtD+I8bjq8hrcP1AH1d3uMrU/lPp8i3fs3T9Y
SSYr7vu1P6voux3q/uA/XOrO0W1gtj/GUhfsuiPiP2GLd3jtxLY/0T6w5Ddi
4z9mLCAfbSm3P8U05AwivuQ/as3IxeyNtz97goHw/zvmP25ucWxs8rc/22TC
I1Ph5z9yDxoT7Fa4P38OMyngtOk/drDCuWu7uD89sfuNEL/rP3tRa2DrH7k/
8XBqG3sK7j/+gzYZ34y5Pz8/N8NkcPA/gLYB0tL5uT8qXuKGLRXyPwLpzIrG
Zro/48UiBPAC9D+EG5hDutO6P2mEBBYAT/Y/Bk5j/K1Auz/g9NZ+6Bf5P4mA
LrWhrbs/MNqGJv+K/D8Ms/ltlRq8P090BgRLdwBAjuXEJomHvD+LASC8+FoD
QBAYkN989Lw/V/h+5gJWB0CSSluYcGG9P0Iq5G03LQ1AFH0mUWTOvT+FFu27
gUsTQJev8QlYO74/1kijwTwpHEAa4rzCS6i+P2ifz7eBjSlA+PNv9XKtvj/m
jHRjgUwuQOBr2yY=
        "]], 
       LineBox[CompressedData["
1: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
ru+2wf4HTYvlYQ==
        "]], 
       LineBox[CompressedData["
1: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
fyOhaeA=
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJwVlHk0lfsXxt9znPO+ZodMJTqGkESDoqR3owxNjpQpV4hyc6mLTMlQyTwk
iZRERQOVkiF5v4ZbXTIUISTpUIYSmYd7fuf3x177j73W83z2ftbaym4nD3jQ
MQwr49f/+7/nc9f9buCRSqLHjbev10Db9idKSTbzyOQpxfXXy9TRvzdflA1/
4JGZxvm/gl6vRvbjQ851PTyS/uLwUMSQGho0kWdmf+WRaRJHDoatVEOn08we
BA7zyPhj7WuTnVURY9Df2nqcR/LiOAayRSooVT9vRmuWR4o4yG55JKSC7H/w
lMfoGFh8bLjj1cdGbFm5qcM4Bsc5ryrSHdjo2w6dN2+EMIAFR99HJatQQIqT
Ty4LA8ZHVb2HA4poR7mfsYQ0BpP6ZrJ1LEXE7I+TDpXD4PzFXW765itR2qby
ikNKGFCr538+eb8COTm1JNYoY3BmZ/S3DeorkGrUNxfd1Rh02xiYz0UuR8Xt
MoSQNgbubc794hx5FMLT7jqti4GyUC3TrloOGWvuLOzfiMGs3hH3DgM51BLs
a1O5FQMTt4p9wwayKCM3Vn2NEQbMChXqFZJBRxpy5q4ABgffCod775NBP1c2
3zxpzvczPmI95yeNRNHaUZVDGFQGF9buGZNC/ZnWb8LtMbjVqrlDLUMKlfoF
3u45jEH72KprA6ZSyE2j1indDQMfk/kfiXmSqDTJsVHoFAZBav7S3HAWSvCM
uHfMD4Pg6v+ynbezkJvJ3ajaAD5/RENG9pQEEp0eNzp7FoOSq21P/OfFkdsf
sUW/4jBwPh/GUdIWQwb6j+L2JWHwzMLqIYtPJyb54dj9SxhIvZ9OeW0risrq
2KvcMzDAn3HapRJEkJh2WXLHHT5PYeoXp2XCqJ/Z66V3D4N9q7wC71QIobLP
AhaXHvL332lmOHlUCLldtsL2PMXgL+mzdMdKQVQ2P3iqCmGQWc954X2OQElt
ovsU6jCI7HUQFDQg0NGijWuCXvP3G2kN1BzDkbhb2JcNTRiMlZBpb1xxdPRf
mQN3ujH4qlXsaWTHRAZ5hjr0z3z9zWYqlXJMJH7WVfhIPwbxc2uLj39koLL1
hTXyQxgkvaieYLswkHjGzk0J0xigWP3W9SECiPv3CYmhOQyukZUcTVMBVL4n
ZWTXEgZtC0EBomICyJ3XnccToMF01JHVEXl0VHHMT9pPkgZc8U+Gnl005LE5
d8pBmwZk8dtPEV4YikuSkTirSwPehEmhrymGir7FaOZspIEDd7ffsAKGpjNP
Hh40oEHGQS8x6jqPivlve7XvLhqM5OdlrfT9j7r/uiMh3pkGq53jdnmZLVJN
7D13i1xpoGCKx4czFqmJ4CrqnTsN3EzFV1jVLlCG2ncm5Lxo0Pw7KJBlukC9
TfG1vx1IgweWwUnPds9TPx3E1F6m0OAiYfn8UuAsJfU0wqjvMg225hS9LyVn
qS2ik7YCV2lQEPxE20Nwlgqv6oq1vEGDPW4XDfdkzVAs1YKxD/do4LUsL433
apraOGry4mcNDTyFinrE9KaowLCgA+wpGlSn75nn2E1QmqOhotGzNGj3KLct
1pygOh0iX/1YoEG6TZr8X/PjlMHmuG0v6HQQ8foI/dnj1OxIlootiw43bEr1
Ckd+USEO1ET8Wjq88s8x/qU+RoXp4ZdnXOmQVVJhqq0+TEUNX25taqLDuG4W
N9PgC3WhY6B+4R0dtNax7cfn+qgLdfo1mh/osPLKH+0BL/qoc9ndj89104G7
e5IjSPZRYQdUk7Z8p4NRplmdfUovFVBRbJFNE4DHLeuE/Wu7KM+4dy+99QRg
Q0xTcZ19K7VXS6JA9JoAaMM7S5tXT6nEwi1orysDfix1s/3vd5DqLpquhe4M
SNV0s3qs3UlWSa2gi3syoDTZniQfdZK/ApdMm30YsH+tP9Op5CN50KTutXUo
A3wTv9qgf7rJlR3WzbZXGXDX1ty0fPYz+RDz7nVpZECWnd0hQ0cuueupc3h1
CwPibtk7mOVyyV4PDluljQG4UKtd5jCXZDVscvvaxYDES9lNCqEDpP+V+QGP
7wwwErbf+DR3kDTUivlxQoAJRsZ42Xbed7LeJm/RfysT9rvkb1fn/SCLo/q7
srYzwftwRa78vp/ktVLl8hqSCTIuRWGnsn6SJxRyTrPMmHCj02237dYxUujr
9Z8PDjDh7V9i2ZJGv0gL3/S+fi8mtC8GdSbFjJP/pMTWcbKZIFtexTnKmSQf
1rzJDbzFBMni68FW4ZNk2iQRmX2bCbvzdH3iiyZJd/uLRqP3mfDbVtdvRmyK
ZLDPP48uZYLYnLFGTcsUafIotKCqhe+vI6pgfnyGRI0nE7QFcDDhDRhm9s+T
etIgchXHgeag/26X6gJZ4MiKownjAKMXJuPdF8jkb4+j21k46DUyp8a+L5DO
tIlzEUo4uF5THT4+t0gu6vkHt23FYUtman63IY88dWbn7A4jHJilC62Xonkk
t1o68B7gcLKwf5tsG49s2F/iH2aOQ9SFbb/e6vP/huf0Sc1DONQfKqyO7MRg
6/WgY6GncDATP9RbuZ4OD/stBgb9cCj4vo6zwpkO7DXL3a0DcfDqYSnhCXQQ
fF7uqh6Gw1wMV/HKEB06m+edWuJxWLO/4cvIAwEIEDhro5aPg1aSx8v7HCYM
W+57n3Qfh4yXwx6XY5jgnKJoPVeIQ5r0qmfm1UzYpVi1v+kZDqEZdIbGZhyk
9XmWQTU49PUEfLPRIKD4RCS8/YTDAfdG1s1tQqDn5vJG/QsOpFT+ZG6EEDx3
IDmRXBwYqQEv374WgnKLpSNbRnBI32k198RBGJB6cHjOLA4SSQvlTxNEwETJ
nlhYwIF7MS3zQ48I1MroJx/i8fkojXgPHVF4xZjKFsYJ6H5oFT3/QRQa+09V
+S8j4A/d1R5GBuKwv8vKrFmWAEPPoVrJK+LQ8k6nac0KAqpcXcdLfotDGxr9
1Msm4CPz89WC5xLQle25ZKFDQPmdb1Vn7rPAKd08Km8DAT7DD0IEvrCgN1Fd
7D89AkaeH597Li8JX0K5K58aEqBs1v26Pl4Svju6bFe0JMA5WiSEGykFJw6Q
dYF7CaiEd4DXSsGopdLe91YEmHbPdD5jLoMxg57D0bYEiNaG4lPJy2Ba1v7M
+FECDhqc9Wkvl4YgcX2BvccJMFKLOagrJANzTNn4uyf4fpMnP992lIHFydZr
h/8mQCG19Z4xQxYEWq0q/gkjwO7PFSGSp+XgQr2OCfscAeLHrp2T65QDvEas
PiSKgHrj3Er5HfIg/KTho24CAZo0uebsZcshoeC+a1wyAarXjdN9zy8HsZzY
IW4qAYMNai2fp5cDK9l8LjOTAJHzDqMmQysg9aJ65OR1vv7v9Uo3PRVAOowp
ZJVDwFPH+UnXUQWQ866VZ+Tz52bvc6ToiqC0hzTweUaA2WWMNeG9Cn5Wey0l
lRJwftLU3BJnA2WQUfOogoC3ah5aV+zZ4KI+vnccERCCy1d8wJVh/Q1FKak6
fh4/5ON0jioDTXp3x8bXBMTa5hB7a5Uhl5bn6t9IwD6fG1ebklXAN6hZ/UoL
AUunXuhULaqA6djCSEkrAbfeV5bH+KgCt+dgwMxH/j3lT8eKu6lBiU2kofwn
fj75TUtJXDW4WF+Ibe0jYLxVsS/AezVolOHxIYME+NtsOHo2TR1mdTZxsoYI
GOi4EVm1SQPe3DkiUzlKQKOhX+Ojbg3IXJnQ1TNGgJ+dwTuxRE04cbns5tIE
AUUz1swHFmtgm/CAu9I0AXJNd+T9JLRAJFJSi5wjIM1uqs2nXwse+px4FsEj
oFpq4vH7J9oQOpAefIsuCBGT0z6iT9ZBXkeUyZ8MQRhM8D8auVcH/gdjkxym

        "]], 
       LineBox[CompressedData["
1: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
3tMHvWMdjOB/ZGAoeQ==
        "]], 
       LineBox[CompressedData["
1:eJwVknlUDXgcxV+PhF7q/X69inq0PVqRrUapr2X0xtIISQumQmFMljDTYAon
0WlR0kKLpfdSipFQHf2+SrYehTJRDe0LlRbPS9u8+eOee+4/99xzz8fIN3D9
Di6Hw/FS6n//ZDJPbNbIh+k8/6UOc2dh3WvpiH4TH8R//lJ5pHsmltBn7S+b
+eCunhF2+thMjIpXZwva+VBh26Mpl4ow6K1VVlsHH0qCnxs1LROhp65LfPIn
PpCqKWkeDaY4KylmD6eHD7kP/qkwMzNFvCTQk33lw8oZ6659rDFGl5R6I99v
fJDesRalxRhjbUqGpULBB5FmQdneVcYoT13oZDrMh0s6np8aSo3Q+rLbzqNc
AkPuXdvk5YZYeFm4j4wnsIlzK3D4nCGKr7T8kalKYHO/edBRD0PcfvVQZNVE
Ao8lx1N83s3A5Iz4O1aaBAokiTdHVkxHM8mW4hItArkWrLisRYj5EtHTzYSA
pd1HuwfhQqyU5teeEhDYmuqs3VVlgGpZ1dx6fQLEwyDN95Q+BuUKXCPNCJTJ
JYKoeVORe7Pe08SCQM20Rumzbj2MvpmxvcCSwGKjDNd1N/Qw69bC31tmE6i3
8XHQs9TDhttuaUsWEqgyKW1LWKSLv+UJr79ZRGBY9YRs9rAODue13N5lR+DG
KM9NVqKDevmHHsfbE0ggY1Wj63XQ5V58V9dSAnMX1U0OPy7Auntbvp1cTuBm
QH5s4moB7rovUpn2I4GJdKT16FQBnirI114pJvC+7/Cp7HvaWFRUbZ/qouy7
IluhPULRDAVnXbwIhMQOjtlkEnSYuiOxzptAVLRXiG4oQdcDdyS7txLIzOmW
h3kSDDbdUBrmQ0Cv+nHutykEZeExw8X+BPI8nHdXHuPjflf1wDlBBIr6v4sM
92thWJbnsQeHCKx6PrXJz1ULk8dlRaw+QsAv+kTnpHla+ChfnOkfTGCtVpJt
Z7sm6kwLa0gLIXChxGCp+dAULGzkbNSKJDB24/ym8U4a+NJ+nW9qFIFfXyda
L5ysgU3n0/ZZxRAYOLymWl7NQ56zY6Q4jkDjhwx740Aebsv+83FIEgFpUIN9
lVQdxwfJ7XozCDQlWflenzsZ16p+Fr4uJvDZoXDilVg1zGw/ORyKBATPr47F
BaghV6Zfa1Oi5KnVTtrhqIb3Y1cnnitT/u/RcKTg8wQ0NswmrjICf4U+1GVr
JqB88W61yndKXivEiQZCVUzd1/7lxYByb034ri1yLio2hFQckyv58fZdInrL
xQ22ernWCgLnnCOum9/l4sRR5z2RQwSMxD+8aj7MxQMR0pY1XArd2mvbeUMq
6CzZ+b5ck4LV+fYLQRoq+KW2ufSZBQUNHxPhxexR1nfc5KG3FQXV+QNRPcGj
bMDIt7jHmkIA7+fR06tGmcL/w32BDYW/dbdHhHaOMM7AuxwfWwq5zYqxEOsR
psWrSBhcTiHR7OF1NTbE5joU7DHfQiE92bRtj/ogC7wUSc9EU0jz3PRqksUA
k6mY9qw6R8Ftg/PF6SoDzMK/8DkvjsLK5VcyvWr6WbNNW2jMBQr50Q3ha073
s81P4EtCCoWya4vih1r72LK+fpkkm0JebLq7KKeX6Yg9wx49obBpVlINXO1m
B3O++IQ9oyBU37+gyKObVZLTS8TlFAoOJ9ft1upmEfV5A+UvKaQWVjr6H+9i
nIMafm+qKdwt0e5A78+sMwWdGpso1HgvcPU17mTO49z1r7VQiGvogY+1Hexa
QJd8RxuFN2tz+sLjO9i2+dNyOzqVuVhzzuZJHazq6UGD3l4KIYMJXvV9bcxm
9mTF7X4K9UWRl9Nz2lhUXPqboK8U3jd+6D0T0MZ+2vrirEJBIdS2c6/s31Ym
KfXbWfidwhLOk2DT5FY23vz70qPDyv6PjhvT3VqZT1SM0HGUwsXKp3ud+K2s
uH/m4NgYhZGa7/YqL1rYf+4vwD4=
        "]], 
       LineBox[{{1.0960605383111652`, 15.149424655892698`}, {
        1.0961185958319943`, -11.594209712819119`}}], 
       LineBox[{{1.9479499086307919`, 15.149424655892698`}, {
        1.9479535917168511`, -11.594209712819119`}}], 
       LineBox[{{0.4884768973545169, 15.149424655892698`}, {
        0.48856498123643133`, -11.594209712819119`}}], 
       LineBox[{{3.0464958720671165`, 15.149424655892698`}, {
        3.046517809328707, -11.594209712819119`}}], 
       LineBox[{{0.12235214266288509`, 15.149424655892698`}, {
        0.12287480312710682`, -11.594209712819119`}}], 
       LineBox[{{4.386186131553717, 15.149424655892698`}, {
        4.386204417291287, -11.594209712819119`}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[{{1.0204081632653061`*^-7, -8.957799558247723}, {
        0.0015335895402068043`, -8.992877097520745}, {
        0.003067077039597282, -9.028184216212942}, {
        0.006134052038378238, -9.099496349585339}, {
        0.01226800203594015, -9.244978032286884}, {
        0.024535902031063973`, -9.547925071876428}, {
        0.02606938953045445, -9.586967663539436}, {
        0.02760287702984493, -9.626280288445916}, {
        0.030669852028625884`, -9.705727014739171}, {
        0.0368038020261878, -9.867988279390277}, {
        0.04907170202131162, -10.206673335636383`}, {
        0.0506051895207021, -10.250400203984967`}, {
        0.052138677020092575`, -10.29444765173644}, {
        0.055205652018873536`, -10.383518595947326`}, {
        0.06133960201643544, -10.565667879125444`}, {
        0.07360750201155927, -10.946869848822375`}, {
        0.09256369960948421, -11.594209712819119`}}], 
       LineBox[CompressedData["
1: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
b2M8+B/jden6
        "]], 
       LineBox[{{0.4688934924304737, -11.594209712819119`}, {
        0.46889416588694566`, 15.149424655892698`}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 5}, {-11.594209712819119`, 15.149424655892698`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"f1", "f2"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.745615072788713*^9, 3.745615528337928*^9, {3.745615619716899*^9, 
   3.7456156474564238`*^9}, 3.745615821685712*^9, 3.745615852011064*^9, {
   3.74561589134065*^9, 3.7456159067746973`*^9}, {3.74561633601224*^9, 
   3.745616395885029*^9}, 3.745616882124918*^9, {3.745617498852504*^9, 
   3.745617547533369*^9}, {3.745617603023901*^9, 3.745617609603416*^9}, 
   3.7456176402711067`*^9, {3.745617679391149*^9, 3.74561769522682*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "\[Eta]", ",", "k", ",", "x", ",", "L", ",", "ylpa", ",", "y", ",", "a", 
    ",", "f1", ",", "f2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ylpa", "=", 
   RowBox[{"B", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"k", " ", 
      RowBox[{"(", 
       RowBox[{"L", "-", "x"}], ")"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Eta]", " ", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"f1", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"ylpa", ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", "a"}]}], 
   RowBox[{"ylpa", "/.", 
    RowBox[{"x", "\[Rule]", "a"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{"f2", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"y", ",", "x"}], "]"}], "/.", 
    RowBox[{"x", "\[Rule]", "a"}]}], 
   RowBox[{"y", "/.", 
    RowBox[{"x", "\[Rule]", "a"}]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"V0", "=", "2"}], ";", 
  RowBox[{"a", "=", "1"}], ";", 
  RowBox[{"L", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   SqrtBox["\[Lambda]"]}], ";", 
  RowBox[{"\[Eta]", "=", 
   SqrtBox[
    RowBox[{"V0", "+", "\[Lambda]"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f1", ",", "f2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7456168924951487`*^9, 3.745616898026976*^9}, {
  3.74561772667481*^9, 3.745617763605729*^9}, {3.74561780293451*^9, 
  3.7456178484962482`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "k"}], " ", 
  RowBox[{"Cot", "[", 
   RowBox[{"k", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "+", "L"}], ")"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.745616908180525*^9, {3.745617728877989*^9, 3.745617764062849*^9}, {
   3.745617804482191*^9, 3.7456178492162733`*^9}}],

Cell[BoxData[
 RowBox[{"\[Eta]", " ", 
  RowBox[{"Cot", "[", 
   RowBox[{"a", " ", "\[Eta]"}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.745616908180525*^9, {3.745617728877989*^9, 3.745617764062849*^9}, {
   3.745617804482191*^9, 3.745617849220862*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVxX041AcAB3BORrPyZCpncnnpzIr1hEdp+l5WPbRi28PNVUryMkq6HkJt
Nx7OsysuLnm9yOVOh+mccy+/u/PTc4lNzbklRRd7GJLJHqSeUtv++Dwft7i0
bxMoFhYWu//z//sTpvo7n2XsOpp7zcLA1pGTLcy4EWokLHm+1+c5WnKd3QC/
jRoPoXrnsaGfCdJ3h6P4GjUdfZR33ESBmgwy+skE1HxUHdBsyMtWkB7BNQ0G
YQGOZPY0pye3kR812tYu0HjYUXXOITBKTprzzEVMOh9h3vocEU1GdlYbAoqo
pdj4apLVvSQh/U1ZrZsOX0VEsnV6SmE9KbX19ekQlmG8ztXeY52IFGRUeL6g
VSJtW3UlZ3UVeSIi9eNv6DVwkauKHWrPko+47pefJdXiwge2XcW6cNCfnrS+
HXkd75wjCIHhPKoc3XJZZXUortmeLssTIC/3UtZFaj2IZY+dz0fF6HBJVDKJ
eiwyzT7VgVK8UjEW3A+LkZ0cs0Ivasap2cU0rVACYiDm2mpzKyIPxybN0KRw
Z6t5Eq4G/JdBYnWnFHVdMT9WlWjRU7J2LP94I7bMLq3ObNYjuOe3oxtuNKGg
Yg/sVt4GPSCAGU5vASstc+nAcBdijfalzt0tEFoOHajw7kb1yen+iaRbYFYX
Rqbk9cC2v09CRspw+VDGm/wjvRC76rs2iWXYcOyKJNF8DyGnGscvLcrwtuZu
zYrU3/GDDdc9uqwVB58MS/DUCGrU2d0dE60wLEwshZP9UIqOxXoGyrFHwgu3
bDRhLjioZm5QDicrU8mO2gcouuSlZ37aBqnZmJzQNIDPHjs+0WW1IZz9YRT3
zkPEp7+g8qgKxJYqhBbuj+FnJTgvP6PA0mv1ay/uECgC/+HhbgUCQsNMtcvD
MG4c3GlNawc7bNsAv8iM2lvZQt9z7ah0GyS+DxzB6V0uy9/db8cndhtd33FG
8cX9jphcTyWmfEqcQs7+iaFpK9oDkxIseZaMUzyGm9mSn5a9VZg5o/Tz6RxH
pm3YKD1XhfXeN52SVk5gX/lzxtePVLCZbz2hSpuEI51fl/25GucHNYdYS1MY
U2yl3ChQ4/FbRUGCeBryL/+Iu2dWI/R5ZfCqnBnkmDIMi/4aSMssOdP8WUQc
d/KkFWqQZb89Wpk6B9c5Ij90TAOXkJF6lfofzHBi/mIHEdAb7/rbbJ2HdpXF
vuoSAmu1RNsp8wIuCkWSO1MEkhpcf+29/xLRm/fazEILZ1MIecHhNbyIyaT1
5Vo4UQnbOMMbvAy92MOY1UJCplCOUt7jzuAW75S9OuS+UnILcywZVxL7eFeE
Oox7Pdystl7BiFtkT+vmdShn/X215aANY2u+41cT+/UYiVCOud22Y7x3UDXZ
i/TghfQ6rXdYw2g3BZz+pUEPZ9kgxSV+DeNf6JMALQ==
        "]], 
       LineBox[CompressedData["
1:eJwVzXc81fsfwPGTnRGudN3oWhWVQlFC3t+G3VRyKKFQ9oiGqFSK1EmZSUol
IxXJ6sTnnMPhICMc5zjDOHbH5iDE7/7+eD2ef77UzwfYeQjhcLhb//V/tyso
RQvvJoEX0RAf5/s3SUO6ROKAIwlymW/qKGsUSDEnJcra75GAHxXSRrSVJU2k
Onr55JNgp8/XgRspkiQ8L/cfHIcERjkuAhdtcRLaslSbIE6GcOyfcYgWIW0O
OhK2ZRcZXK/9PMMOFSIRStO3VpwjwwNfqoEbDUcSrIyz7B6S4VKboffzumV0
1nJ/7GARGejFhWcsQ5dQFeGZSXgPGZ6POhCeXF1A29p7+XIyFEgUDU4wRPPo
2QbDtEwjCswxDsqXms2hBff7h43dKUDqk+N38QXILY+x1PiEAkoit+83Vswg
2rT2xwtEChSkllY6FUwjPZMw5/kBCtSWBTi+rphCyXfqZR7/VQmf1JKs83mT
aLlWpULdrBIqvjukO6yfRJ7y/v7FXpWwP8UuTHB+AjXg0b+2iZUgHPG1sSRk
HBm8lmvqIlUCoiSnB+4bQ2mDbrdCRioBiwNR4Q2jSFi3UHe1UhX4lotmt8qN
IO8rIt0vD1YB64pjePY6Pmopt4/bGVAFhTJ3spN1fqG9ollYTWoV2H934P0+
PowkEqwzJiarQAg/nvAADaJFo57FjPVU2LF69V9mCoNojHvt9MmDVGCjxD2h
AQOoVStbqjiBCiGnOepZZv2o+gd4XiynwnRYw9rA/D5UGsQgKQ1QIdKMf+2E
dh9KJ4pdubGnGib5b6jx2r3oqWt6s45rNYwZ8GO25vPQPdHd2zqjqyGv+7nQ
QVMe8jrm0Y2xqsHdbR+T7NqDDHorbcQiamBYW17sXVYX0oo+k1mSWQOfs+N8
9Sc60frt0yuXGmvAcIafJGbWiVauaBTVq9Ig2tP7pc0QB9VJRqo+pdBACeO/
JgawUPlnpbADfBrU8V65dLA6UP6p/LZphVoo0FiRPmTdgRLTu2JOe9RCQMir
wsO6TOS602xGWaIOfueExjGV29FJBv1og14dbHjhtXUmjY4swv1ybjrWQeXc
hUBDNTraVp12rie3DqxbfTSJOm1o1nGR9v5IPSw7X9utcaYFPYosfakf/wPE
jvOeG8w1oJLmnZaW/zZB4msLUd96MiIMj1jpWDSBrTbVzkWRjDyFsmzk/ZtA
kaK8POdCQusMlI+yy5vgyV7Bx+rRckSsj8wt2dEMjl8zzoacKkXKut4Fto3N
cHOLZ87+4FzEEhijyzItMPKT9UvW4w1YCClhnuotMNUsHz60PxO+rBGQ8IYt
oMieUAhSz4aHWp8p+5xbIG9A2lJ7+CMYO2pWi39sAd29FsPZTV/h+XephheH
W6HEcOHAxmAS4O9yWJWxbaCjR9ysSGgAue7NOhcz2iA0VLxkNLIRak2DIiRL
2iDg0qT73mtNYDwrqnaC1waGj26XmRQ3g7KXrkenER2cPMsk+r+1QOfRO+Pz
/XTIeqf/iCPLgKQPP7C0RToQfj0Yi33DgGMSfz8D+XZYg1m/NNzDBBL5g8F9
03Z4OCPLKvbsgAwD+nWF+Ha4tc9i1LqbDe7rtUV2YAyoCfwW7ZTVDSpXg+1/
2jNA9eWSfq9ID9Bbv78P8WHAxgN5a+Tce8Di8QlrYhID7EedbsVp8UALd4Ng
NcqAXUW//wxW9UL3WWoXX4gJUo9Gd9vo90FKmaz+EyUmJD7JN2G86gOJy+9a
6QeZwItveVd1tx9+9TcoXUhlQujjwre+XoPw5oCSt1g+E3aeSMC9Gh4Ep1fn
iTlUJgR6hMci3yGox885T0wwYQ6n4GwRPgx59WpvIyw7IHZftvq2Kj64a/vM
qDl3wJI5OS7KZQQ2RBWZVwV3ALbWbVywPAIEM5shyfQOQDFpCwybMQgouLw9
ZaYDMhcDpc0JEzBm2tNaK8GC1bNlQ++HJsCXdjRsUYUFFRpXNV+YT8Klri01
58xZIKEVWlImPgUD3sl+cY4smB+0JGr7TYH7rMhaih8Lrtw0riukT4GrTLfr
piQWtJ/6MkvOn4bOlCPiDrksaCIUbkvXnIGzG4kfoytYwF9noWKdOgN4k6QF
/gALvoj03OHFC+C41+GEL3vYIPg29l5QMQeNM2XGfbZsIEil6Ig6zMPh21o9
iq5sGPi56t0awTxYJQvtuB7Nhos/q2xfHFqAao3Attw0NsT82WW0MLsAhz5x
wzj5bIg7sitKumARMGppDXSwAaMYnr1u9gcqjm/2Dxplg7eLS6a0wjKYcuLX
vl3FgTuSBE3a5DIYTfu7iW3lgOdYv1HwJRxWfJMjbmTGATma72z0MA4zkLT5
5GXHgW7RjNC7QaswPfVNiz/CODC5Mi4VmyKEfcp7lrFM4EDWmDL7t5EwpmOE
s9J7y4Fch6VYxV5hLLfSb8yt5L+faCitLlkE0z7GToiv54A6rePcJrwo9p5l
ZULt4sANuhTBfpMYttGzuGd2mgNlA5sCi3HimFrE0x1OKlz4yosqjBiSwNIl
Vtpi9biQIZaNJ82vxlQSfG+UH+JCkJVjt5iqFJaqylIfx3PBIcJ1SvOcNKb0
wZKm5seFmKkt1j5lMljS7iJ/u0gu2Oz5w24ykMXWUjQU7yVywdw0KiTKWw57
diSOWJTDBbcLb2MGj8ljTk9Nqcc/cGF9PkNIxV0e+x92shPT
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJwVUnlYTAsfnqZpnTQqLUaLMiqVFhLl1u8gRBGyRCUtltKN1G2VFvlEK4mE
9uhG6IZk6Zwo1G1VWkjTvmo7szTbGbfvj/d5n/d53uWfV9f73IGTZBKJlLaI
/3PZ/cg9O61x8Hu7wTU9QB1jnv9wF92MQ0aILi1KXR070LXc6+8dOIwmhyZr
YKpY8vU6e20nHPIvc+c79FSxOtsgw4z9OKxWuUBamboM21T0ZfaiOw70Jr+S
f6JUsAtHQtrnvXCQmTt0oFmkjD2WX1l56jQO4R/tAzQTlDHtoLBL+y4s9pnt
NE0pVMJcGau868JwwJvJl8dtlLAbXc3bbaIX846mO0Y6l2IUO/0ljEQcmifM
j6WtWIrZzbfNZaXgMBJgZnjqKg0LK4ruWJKBg5ih4v+5TxGblP92b+EBDvH0
nHFG/hKMUR0bE1CIQ9XHAS0P6hLMI8jEZ6AEB4HL+uDVUQpYa9dlo38rcFi7
okvf2J+KySeZKSJVOHhfLdfqGZfHttn9mH9RjYNrGtdr4aw89qpoXVVOPQ4O
N1b6Z1+Sw+4HDey8wMSBKlsUONwig3UyUozHhnF4K+FhcjxABqN1b6K5T+Jg
vj7rWSNVBou3S+/czsHhpk99ofiANHaGCieXU1kQ2iwj6/2bghVUTzqkLmVB
rpulvtZzCvYj6LaJpBoLKHRNrQlvCra3e5r1ayULZoaOtng0S2KWxffjMSsW
/LAMsMx9Q8YCXR1ObfiDBXoP+sbfRZCxR1T2rtItLCg3Pel9zIaM0S84Kt1y
YoHUX/puvagERgJB7mlvFtSINwze/k7C/u0+8l4xdbE/xeWlRJIYjf8+puqf
wYJPx/LqFc3F6KbesMC6LBbAeiP32k4CLWLe0blYyIKdn1/EcAwJ9OJoV9zE
axYcsZmTWMUUomvZR3bUDrGgZXNoXMk1PjrMGcvRmWBB++YxtrY9H81eCFuI
nGHBumjTFXm/eai08E6JBZ8Fzq8KPR5G8NA+iW75XEU2RB3nd8lHLKBpNNeW
CGs2hElniXXyOOgOpXGDb3Zs8PNreHXyDAcVKYfHmtuzwThR3OluwUHPqGVZ
jO1lA6tla/7eOjaKaHVnHPRlw9Efwae/slnovJGrq1kaG3T9NF5vP4ejLjtc
B4aH2SAZJJWRGDWLvlGxaBmaYMPZ8+uqnC1mUb0BufeDM2xw14waeDY2g+JR
b7P6eWxYEmnVYnZ4Bk0v197Xq8CB37spFQPW02ij5kh1uyUHbCKqk3uWT6H2
rKD7HxI40NRY+ZBvMoY+wXZfr7nGgXcuTXqH50dRldRV4VgqB7IHfi2XfTWK
Dhp+c6nO4oDdh3MXTyGjaOzxTdQ3TzhwzCQ2d9h1BH1fL44o7+BA0Vprtco7
Q6hVXtKRPAYX1jhr6rjY96PPa2IiqEZcSPtgPp2i0I8aDwXfCzXjgoN5nBK5
lImu1HdnOtlw4fwuvol6Ux9KfWJymu/MharPVr9Xa/xE+yubQg9EcWF+9AXy
G+1Bk1potylfuZBToyDjvKsd7RdndJyJWQC9m82UxPy36MiulkK1jzywljpd
y1zfCowkg7QbX3igw/vYlnC/FXwbYyIVmnkQV9qx0V+qDQb3mu8n9/BATdsp
W9jVBn0uN8TTMzxo2X1E60RsO3R7uByto/PhhIp7aAizExqCuhRDLvCB3F4y
cm/gJ8hVmAlmwvjwjdcDVof6wIF9dcQvmg8WPcfLttX3wefQTe88E/lg5Zv7
B/oPE2qj7vo55vDhvRN+orKuH95fcavVa+ADm/lV+XXpIDy/y4xo0xXA61XX
1d6UjULAGs3v6wwE8Grt9LaU2VEwrHK1uWUiAEfnYsu3FmOQ290mOLxRAOZq
79pMKscgVb02qtdJAHLnpO1TP43Dn5kl0WNhAqitlHa7w5sEw9UjPx2iBaD2
6EVfHTIFwy907UrjBZBwRiLr9LUpcO/IFgekLO5TyOVUzV/gpJISgxcIQGrk
2yG5ndNgdCMojmgSwK2picfJL2dhdOXTgePtAvh7SE5rgjwHBc8nt2DdAnip
pBF+yHgO6K0+5MtDAtD90n+DFj0HcrTDl2X5AqhcbrjGmDEP48k2V1QYQgj7
mdmiF49DcaLktTWRQtCfCxKWXOWA8nDiJdMYITzT3Uyzfc2BWFAMWZ8ghMMF
yTm2E4s/5Gp42qYKoc3w4rkkJy7QfE037C8QwpbHlMZUjQWIgKMD4Q1CcFJV
Wkpa/MFodl9ndIsQTJ3LHjmS+HCQ69MY3yGEZdjB1tXWfDAtC6xM7hPCILD0
0p/wYYiekJKHC+GiUoVvYrYA9nCfWn+hi2B33ZT+g0wRvNlvadakIwI74G02
6haBYVkV4ytDBNism0nYCgLIvrW0XlMRbHXJa/UsIqCyrWdkdqsI2koa1vSi
YtAto9xUP7uYJ/E6n6WTkFTZ61c1z4uguS58G/c1CRH50KJ1/xJB5ZR/Rc0A
Cemk088Yx4hg7rjRPpalBJKUaGYHGYv+bflbNQYlEI7PsclTb0VgTzB/BR2T
REJVhCrdmAgUjPbs602XRLgf7tnu+iSC22ddPQy/LGrdn+nGbSLYONVTH21N
QXhMz41zoyLINxga7DCQQsLTSF5ev0RQ4RRsSj4lhfDs8q9/nReBYyBB7CyW
QvgPBn++EImg2DSwwtZAGhG4nUyIUCZgzX3Bpc/WMkgkVfrppDoBNZ+iyGVx
MojwzcMuNy0ClqnOanAaZBDR8nEjO0MCiqn7r/R4ySJEl38b2Y6ApkfV5jsK
5JBLV6nC4G0E9HZ4OqZz5RCx1RPGiAMByUofggud5BFx5nTYZxcCzKS0L/uI
5RHSwfPayX4ENB6+GW8UqYDESio5EIEE1L+UKs3qU0AkKsqDAkMIiH5Q2+21
fQlCVmbV7oshQGEjm36CrohItv51VjWTgJu9OXjDMA1JiFHL/F82AXPWh577
mi1FKGaV1Qu5BKTvlacSfy7qVJ7S91ICMvesyrOdW4p4brk5XVtBAP15F1nT
Vwn5DzYslGU=
        "]], 
       LineBox[CompressedData["
1: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

        "]], 
       LineBox[CompressedData["
1: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
3QL6G6D33Z0=
        "]], 
       LineBox[{{0.12155928381127423`, 4.347763103880448}, {
        0.12172154095542126`, -5.856019380836053}}], 
       LineBox[{{0.48815139113634043`, 4.347763103880448}, {
        0.4881792365035081, -5.856019380836053}}], 
       LineBox[{{3.0465553569678443`, 4.347763103880448}, {
        3.0465603965789576`, -5.856019380836053}}], 
       LineBox[{{1.9497074030989485`, 4.347763103880448}, {
        1.9497163133877886`, -5.856019380836053}}], 
       LineBox[{{1.0973338750977026`, 4.347763103880448}, {
        1.097344322629032, -5.856019380836053}}]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAASmXo0cDpdT7+aedGFZTMP+euVmLf
GVQ/sItGYbmBzD8WC9WOsxlkPx2YQGlcb8w/LjkUpZ0ZdD883IZBn0rMPzrQ
M7CSGYQ/9ubkDxgBzD/Am8M1jRmUP7coHQjWbcs/g4GLeIoZpD/1wiWHgkbK
P2R07xmJGbQ/5SYOtJb0xz8IlEmh8PHEP/o5/4+X3cI/t9AyR0cezz/o8lHk
QBO8P1iD3NrDi9Q/Kg9WC3l2sj9vsXMtmPTZP59UIdkMeJ8/8pDWyAEB3z8+
xExWcXmBv8jBxr/PPOI/qHYZsKKFqr9peUkNWezkPx778ivlU7i/wQky/6xt
5z9s2gWn+GnBv6ajxP4aJeo/FJoe8/Y0x79AFr2iU67sP8ZizGdCtsy/Lcfc
uMYq7z8dUD348xnRv9RAU+6p7vA/8+4sF3ci1L9sCmvS1TDyP1yz35ePBNe/
y9hXvQ6O8z9pDdtQ7zPav1NGWOHk5PQ/W5YwcnRk3b82oItXoCT2PzKy439o
NuC/4P6T1Gh/9z/iqUGo2OPhv+VJz6MWw/g/xnq7k95847+wmd950SH6P5tS
6qRbQeW/pYgDiSl6+z9O2/EKXwfnv/VjWupmu/w/ff1u/f236L8LRIZSsRf+
P6G7XORVl+q/fBDlDOFc/z+Ighy972Dsvwy+KwDXTQBAEVt1eVwr7r89dk/9
w/oAQBgGFnsPFPC/nKSMoyOcAUCe5NjtCQfxv15VNM0JSwJAxf06x74U8r+1
1WWTvvYCQHBVwIhAJPO/OcywAuaWA0D1/uxLxCf0vyBFZvWTRARARGGOt1pI
9b81NDWRtOYEQDnqdmvFXPa/3/KNyaOFBUDP1m9ZoXL3v+wzUYUZMgZAAlKP
ETWo+L8m6y3qAdMGQC1VREL70Pm/xCR10nCBB0BecQRSyBv7v4/U1WNSJAhA
Xn17jaBZ/L/vU8CRAsQIQAAk+QUOmv2/slUVQzlxCUAE53Tq/f/+v6PNg53i
EgpAZ8mU8iUsAMD3x1x7EsIKQCJlWpKW7ADA4JG/9RBuC0C6m40Gzq8BwPbR
OxmCDgxAnSmhltZrAsBwlCLAebwMQF3WXlqPPgPAF80iEOReDUCSFAa7EwoE
wFPVrPwc/g1A7N4dm1PYBMDyX6Fs3KoOQMkBrWMVwAXAv2CvhQ5MD0Cn9w7R
SqAGwLrPbEveTg9AzoC+G0akBsC2PioRrlEPQOT0BQlCqAbArBylnE1XD0BP
4wjMO7AGwJrYmrOMYg9A9RiY+DbABsB1UIbhCnkPQFd82BFM4AbAK0BdPQem
D0DB6/d38iAHwCavGgPXqA9ArEo7agIlB8AiHtjIpqsPQG1xlgQTKQfAGPxS
VEaxD0BUOUgyNjEHwAa4SGuFvA9AczOKdoRBB8DhLzSZA9MPQE9TQcpAYgfA
3J7xXtPVD0AQ/T5TW2YHwNgNrySj2A9Aql8sh3ZqB8DO6ymwQt4PQHCMjvCu
cgfAvKcfx4HpD0Af1H3OJ4MHwLgW3YxR7A9A0yAGtEeHB8CzhZpSIe8PQJ5S
8EVoiwfAqmMV3sD0D0B9uqRvq5MHwKXS0qOQ9w9AVEXMB86XB8CgQZBpYPoP
QOdeEE3xmwfAnLBNLzD9D0Dk258/FaAHwJcfC/X//w9AE6Kp3zmkB8CbUVue

        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 4}, {-5.856019380836053, 4.347763103880448}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"f1", "f2"}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.745616908180525*^9, {3.745617728877989*^9, 3.745617764062849*^9}, {
   3.745617804482191*^9, 3.745617849336769*^9}}]
}, Open  ]]
},
WindowSize->{1916, 1041},
WindowMargins->{{0, Automatic}, {Automatic, 18}},
Magnification:>3. Inherited,
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 10527, 303, 1548, "Input"],
Cell[11110, 327, 437, 14, 139, "Output"],
Cell[11550, 343, 433, 14, 139, "Output"],
Cell[11986, 359, 950, 25, 137, "Output"],
Cell[12939, 386, 512, 14, 149, "Output"],
Cell[13454, 402, 330, 9, 88, "Print"],
Cell[13787, 413, 358, 10, 149, "Output"],
Cell[14148, 425, 331, 9, 88, "Print"],
Cell[14482, 436, 1454, 42, 165, "Output"],
Cell[15939, 480, 422, 10, 96, "Print"],
Cell[16364, 492, 633, 20, 250, "Output"],
Cell[17000, 514, 859, 28, 202, "Output"]
}, Open  ]],
Cell[17874, 545, 394, 9, 208, "Input"],
Cell[CellGroupData[{
Cell[18293, 558, 3409, 92, 617, "Input"],
Cell[21705, 652, 4064, 118, 431, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25806, 775, 1568, 44, 465, "Input"],
Cell[27377, 821, 14057, 285, 711, "Output"],
Cell[41437, 1108, 488, 7, 91, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41962, 1120, 1165, 32, 437, "Input"],
Cell[43130, 1154, 237, 4, 91, "Output"],
Cell[43370, 1160, 223, 4, 95, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43630, 1169, 10644, 300, 1961, "Input"],
Cell[54277, 1471, 1388, 25, 137, "Output"],
Cell[55668, 1498, 1432, 27, 137, "Output"],
Cell[57103, 1527, 1386, 25, 137, "Output"],
Cell[58492, 1554, 1412, 26, 137, "Output"],
Cell[59907, 1582, 1248, 20, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61192, 1607, 2699, 78, 749, "Input"],
Cell[63894, 1687, 150375, 2572, 1131, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214306, 4264, 5975, 184, 1602, "Input"],
Cell[220284, 4450, 596, 16, 137, "Output"],
Cell[220883, 4468, 629, 16, 137, "Output"],
Cell[221515, 4486, 597, 16, 137, "Output"],
Cell[222115, 4504, 609, 15, 137, "Output"],
Cell[222727, 4521, 706, 20, 175, "Output"],
Cell[223436, 4543, 728, 21, 175, "Output"],
Cell[224167, 4566, 783, 21, 183, "Output"],
Cell[224953, 4589, 783, 21, 183, "Output"],
Cell[225739, 4612, 362, 8, 135, "Output"],
Cell[226104, 4622, 483, 11, 68, "Message"],
Cell[226590, 4635, 706, 18, 183, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227333, 4658, 2451, 77, 807, "Input"],
Cell[229787, 4737, 50203, 886, 732, "Output"],
Cell[279993, 5625, 350, 9, 144, "Output"],
Cell[280346, 5636, 451, 13, 203, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280834, 5654, 2199, 59, 742, "Input"],
Cell[283036, 5715, 652, 14, 131, "Output"],
Cell[283691, 5731, 585, 11, 131, "Output"],
Cell[284279, 5744, 37321, 676, 732, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[321637, 6425, 1763, 54, 684, "Input"],
Cell[323403, 6481, 338, 10, 131, "Output"],
Cell[323744, 6493, 255, 6, 164, "Output"],
Cell[324002, 6501, 28606, 530, 742, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
